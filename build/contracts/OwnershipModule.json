{
  "contractName": "OwnershipModule",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "cOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "avaraNftContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "BuyingNft",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "SellingNft",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Avara",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AvaraNFT",
      "outputs": [
        {
          "internalType": "contract IAvaraNft",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moduleName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moduleVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previousOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price_",
          "type": "uint256"
        }
      ],
      "name": "selling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        }
      ],
      "name": "buying",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ping",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avaraNftContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"BuyingNft\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"SellingNft\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Avara\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AvaraNFT\",\"outputs\":[{\"internalType\":\"contract IAvaraNft\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"buying\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moduleName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moduleVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ping\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"previousOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"name\":\"selling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"moduleName()\":{\"details\":\"Returns the module name.\"},\"moduleVersion()\":{\"details\":\"Returns the module version.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ping()\":{\"details\":\"Occasionally called (only) by the server to make sure that the connection with the module and main contract is granted.\"},\"previousOwner()\":{\"details\":\"Returns the address of the previous owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without an owner. It won't be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/oncemore/Blockchain/avara-test/contract/contracts/OwnershipModule.sol\":\"OwnershipModule\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/oncemore/Blockchain/avara-test/contract/contracts/Avara.sol\":{\"keccak256\":\"0xea9988eaac0d6a38503d6b78081135a9348f4073d321723202804bb059698f53\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://62517fd074a5ecb1de9bb0830118e3f443ab9184057766332c51c65bfb58de48\",\"dweb:/ipfs/QmRiZU62aw7kx4LWVsFk8dettK3ehYcTr53kC7u7VC7Y9f\"]},\"/home/oncemore/Blockchain/avara-test/contract/contracts/NFT/IAvaraNft.sol\":{\"keccak256\":\"0x1291c180e90e00823d8753a58f662786b81a67227356e0d0793c605b6aae3000\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b6e8c060e35fc8c529b15c0f8368a8907838da597bb8f9acedd10a484908612\",\"dweb:/ipfs/QmSxEL799SYmseQDE2MsuqyTn2gccnuz5BiyfA3xXCYnMk\"]},\"/home/oncemore/Blockchain/avara-test/contract/contracts/OwnershipModule.sol\":{\"keccak256\":\"0x17b825cacabd8766ad54e44a205b75b6fbf9440973a6e490c54d8dea59f16290\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://89686ab8327e3a966bf5dc5629582e6ee9af6838e27e40f93cab2f0d2f966b35\",\"dweb:/ipfs/QmSQ2dWXH1adC2YLkFxK14mrzSMcBLb9c9j1FcudAoekuF\"]},\"/home/oncemore/Blockchain/avara-test/contract/contracts/abstract/AvaraModule.sol\":{\"keccak256\":\"0xaaa29d473a1c2991e095bf219fc4aa5aaa69e6a3073de5362c6599d9a503e80e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2e1be07432d5170558f6b67dea9d4a51c4d88b448ccb6087ff36543b073da0ab\",\"dweb:/ipfs/QmekzUdgdfStz2j6oqXnQ9F39N4FtrAuS86dWGbhTPwxdb\"]},\"/home/oncemore/Blockchain/avara-test/contract/contracts/abstract/Context.sol\":{\"keccak256\":\"0x50de2fa042312009746a44f234a6fd529c9071692863286ad5143a56d95ef2a1\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0dc17f91f281a53c9bff4c4d564bdc66b1a27fbd70f2cfe21c921983f4f863d7\",\"dweb:/ipfs/QmNdnHqVUS1Ku6yPLqXEaRiuTJzTHhs8pCuTKRmAi8PkaH\"]},\"/home/oncemore/Blockchain/avara-test/contract/contracts/abstract/Ownable.sol\":{\"keccak256\":\"0x6c55bcaad9eac67eb3126ea1620e4374908d26c9345010e09cefe298d906e254\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://44c7945cfd11c6c031f5db2ffb255a965864b0908a8d513a7438281e997047b6\",\"dweb:/ipfs/QmehnvdjUFAgqK8UeErefJUm71eJmq6Lw51tuhGGu8sv2o\"]},\"/home/oncemore/Blockchain/avara-test/contract/contracts/interface/common/IBEP20.sol\":{\"keccak256\":\"0x4fc0b5f4af6b04fbb2f643ccbf0837466193169dd4612e945bbbadaa59792815\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://383fd6d0ccda1c001029d1ddbce9c1ba90e73b1f2b49cf61783f62c5c81a0068\",\"dweb:/ipfs/QmRLKMVwPR9AoNaYf5tkQf6Ae7AKpRH6ywfocyjtoECRu5\"]},\"/home/oncemore/Blockchain/avara-test/contract/contracts/interface/pancake/IPancakeFactory.sol\":{\"keccak256\":\"0xce8e690c4b1ee9f52e2d5c03f52e704fcb564d124325f9b7ac43a4d42e87911b\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://baafc61526bf017acd36e5a83aeeb4c3b5faaa733c818dea7b241edc24a93be9\",\"dweb:/ipfs/QmZHRh6dEDCui7QxYPE47GmqKmAEE9dx5U8qUKcoWcGfae\"]},\"/home/oncemore/Blockchain/avara-test/contract/contracts/interface/pancake/IPancakePair.sol\":{\"keccak256\":\"0x4d05ea17c02bb658d39936d222397abb0120d8d1209c06e84b3bf2c5bb97f32a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://20fe2f9271cd5064599dfbf442f6ae7d64cac66ab83f28d1930fbf527d28f5b6\",\"dweb:/ipfs/QmTY1o7LWtBUzjhQHk1ScX1tniK7zsCXK9J22nU8mcxB2x\"]},\"/home/oncemore/Blockchain/avara-test/contract/contracts/interface/pancake/IPancakeRouter01.sol\":{\"keccak256\":\"0x755997298b7a20d1c89095dcdd36c760318c9f9af06dfda7009543e982e998fe\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://26a7a17f65d029c621436ccddc881ab2ceb5d224beadb0fde8904bf28788f2ba\",\"dweb:/ipfs/QmUkBKwGhVqwfpkwDNLVZSoe4VxdRzQNyeGHmcG464Sq4m\"]},\"/home/oncemore/Blockchain/avara-test/contract/contracts/interface/pancake/IPancakeRouter02.sol\":{\"keccak256\":\"0x2e60a86d076d449ccdb30ffd5552819643bdce4116e6933cf42e0127ae172630\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b45cf7c26fff4250651295a3d8b28a22491d202b5fc56cb9c2a506aed958a8c\",\"dweb:/ipfs/QmaoB9uk1tqMV4jhTr2eRtT7f4ZK7WdtQc8eG9QT5LEeP6\"]},\"/home/oncemore/Blockchain/avara-test/contract/contracts/library/SafeMath.sol\":{\"keccak256\":\"0x250b8ac9d1eee477e4b5781067d51f52805e0ca93a44115532bb87fcca17f5a4\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://27af98b0e3d587225de56ca8ecc96f05d91ceebd7336423f9685bc181514b7e7\",\"dweb:/ipfs/QmWYLtyZCugxLP6ZAhWVBYJM3xirtfXzqbMtmpWUfrnCYN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063726bddfd11610071578063726bddfd146101305780638da5cb5b1461014c57806393f0899a1461016a578063baa3b4d714610188578063c99bf814146101a6578063f2fde38b146101c2576100a9565b80631032dd60146100ae57806313b2a691146100cc5780635c36b186146100ea578063674f220f14610108578063715018a614610126575b600080fd5b6100b66101de565b6040516100c391906114fa565b60405180910390f35b6100d4610204565b6040516100e191906114df565b60405180910390f35b6100f261022a565b6040516100ff9190611515565b60405180910390f35b610110610337565b60405161011d9190611464565b60405180910390f35b61012e610361565b005b61014a6004803603810190610145919061129b565b6103e9565b005b6101546106d1565b6040516101619190611464565b60405180910390f35b6101726106fa565b60405161017f9190611515565b60405180910390f35b61019061078c565b60405161019d9190611515565b60405180910390f35b6101c060048036038101906101bb9190611249565b61081e565b005b6101dc60048036038101906101d7919061118d565b610e72565b005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060610234610f6a565b73ffffffffffffffffffffffffffffffffffffffff166102526106d1565b73ffffffffffffffffffffffffffffffffffffffff16146102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029f906115d7565b60405180910390fd5b6102b0610f72565b73ffffffffffffffffffffffffffffffffffffffff16635c36b1866040518163ffffffff1660e01b815260040160006040518083038186803b1580156102f557600080fd5b505afa158015610309573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103329190611208565b905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610369610f6a565b73ffffffffffffffffffffffffffffffffffffffff166103876106d1565b73ffffffffffffffffffffffffffffffffffffffff16146103dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d4906115d7565b60405180910390fd5b6103e76000610f9c565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634f558e79836040518263ffffffff1660e01b81526004016104449190611637565b60206040518083038186803b15801561045c57600080fd5b505afa158015610470573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049491906111df565b6104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca906115f7565b60405180910390fd5b6104db610f6a565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161054c9190611637565b60206040518083038186803b15801561056457600080fd5b505afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c91906111b6565b73ffffffffffffffffffffffffffffffffffffffff16146105f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e990611557565b60405180910390fd5b604051806040016040528082815260200161060b610f6a565b73ffffffffffffffffffffffffffffffffffffffff16815250600760008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f9e57e2406ea0401d6a82255e86afa05bf3c967ea9eff5abc93b28c49cde5385282826106b6610f6a565b6040516106c59392919061167b565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060038054610709906117e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610735906117e7565b80156107825780601f1061075757610100808354040283529160200191610782565b820191906000526020600020905b81548152906001019060200180831161076557829003601f168201915b5050505050905090565b60606004805461079b906117e7565b80601f01602080910402602001604051908101604052809291908181526020018280546107c7906117e7565b80156108145780601f106107e957610100808354040283529160200191610814565b820191906000526020600020905b8154815290600101906020018083116107f757829003601f168201915b5050505050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634f558e79826040518263ffffffff1660e01b81526004016108799190611637565b60206040518083038186803b15801561089157600080fd5b505afa1580156108a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c991906111df565b610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90611617565b60405180910390fd5b600060076000838152602001908152602001600020600001541415610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095990611597565b60405180910390fd5b61096a610f6a565b73ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016109db9190611637565b60206040518083038186803b1580156109f357600080fd5b505afa158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b91906111b6565b73ffffffffffffffffffffffffffffffffffffffff161415610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7990611537565b60405180910390fd5b60006007600083815260200190815260200160002090508060000154600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e610ae4610f6a565b306040518363ffffffff1660e01b8152600401610b0292919061147f565b60206040518083038186803b158015610b1a57600080fd5b505afa158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b529190611272565b1015610b93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8a906115b7565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd610bd9610f6a565b8360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600001546040518463ffffffff1660e01b8152600401610c21939291906114a8565b602060405180830381600087803b158015610c3b57600080fd5b505af1158015610c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7391906111df565b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610d0d9190611637565b60206040518083038186803b158015610d2557600080fd5b505afa158015610d39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5d91906111b6565b610d65610f6a565b856040518463ffffffff1660e01b8152600401610d84939291906114a8565b600060405180830381600087803b158015610d9e57600080fd5b505af1158015610db2573d6000803e3d6000fd5b5050505060006007600084815260200190815260200160002060000181905550610dda610f6a565b6007600084815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f96a887bcdadde42932e4d5545e020ad5eff675b467f53684e96a7d0062b4357782610e58610f6a565b604051610e66929190611652565b60405180910390a15050565b610e7a610f6a565b73ffffffffffffffffffffffffffffffffffffffff16610e986106d1565b73ffffffffffffffffffffffffffffffffffffffff1614610eee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee5906115d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5590611577565b60405180910390fd5b610f6781610f9c565b50565b600033905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60006110cf6110ca846116d7565b6116b2565b9050828152602081018484840111156110e757600080fd5b6110f28482856117b4565b509392505050565b60008135905061110981611b57565b92915050565b60008151905061111e81611b57565b92915050565b60008151905061113381611b6e565b92915050565b600082601f83011261114a57600080fd5b815161115a8482602086016110bc565b91505092915050565b60008135905061117281611b85565b92915050565b60008151905061118781611b85565b92915050565b60006020828403121561119f57600080fd5b60006111ad848285016110fa565b91505092915050565b6000602082840312156111c857600080fd5b60006111d68482850161110f565b91505092915050565b6000602082840312156111f157600080fd5b60006111ff84828501611124565b91505092915050565b60006020828403121561121a57600080fd5b600082015167ffffffffffffffff81111561123457600080fd5b61124084828501611139565b91505092915050565b60006020828403121561125b57600080fd5b600061126984828501611163565b91505092915050565b60006020828403121561128457600080fd5b600061129284828501611178565b91505092915050565b600080604083850312156112ae57600080fd5b60006112bc85828601611163565b92505060206112cd85828601611163565b9150509250929050565b6112e081611724565b82525050565b6112ef8161176c565b82525050565b6112fe81611790565b82525050565b600061130f82611708565b6113198185611713565b93506113298185602086016117b4565b611332816118a8565b840191505092915050565b600061134a603d83611713565b9150611355826118b9565b604082019050919050565b600061136d603b83611713565b915061137882611908565b604082019050919050565b6000611390603083611713565b915061139b82611957565b604082019050919050565b60006113b3603283611713565b91506113be826119a6565b604082019050919050565b60006113d6604983611713565b91506113e1826119f5565b606082019050919050565b60006113f9602583611713565b915061140482611a6a565b604082019050919050565b600061141c602c83611713565b915061142782611ab9565b604082019050919050565b600061143f602d83611713565b915061144a82611b08565b604082019050919050565b61145e81611762565b82525050565b600060208201905061147960008301846112d7565b92915050565b600060408201905061149460008301856112d7565b6114a160208301846112d7565b9392505050565b60006060820190506114bd60008301866112d7565b6114ca60208301856112d7565b6114d76040830184611455565b949350505050565b60006020820190506114f460008301846112e6565b92915050565b600060208201905061150f60008301846112f5565b92915050565b6000602082019050818103600083015261152f8184611304565b905092915050565b600060208201905081810360008301526115508161133d565b9050919050565b6000602082019050818103600083015261157081611360565b9050919050565b6000602082019050818103600083015261159081611383565b9050919050565b600060208201905081810360008301526115b0816113a6565b9050919050565b600060208201905081810360008301526115d0816113c9565b9050919050565b600060208201905081810360008301526115f0816113ec565b9050919050565b600060208201905081810360008301526116108161140f565b9050919050565b6000602082019050818103600083015261163081611432565b9050919050565b600060208201905061164c6000830184611455565b92915050565b60006040820190506116676000830185611455565b61167460208301846112d7565b9392505050565b60006060820190506116906000830186611455565b61169d6020830185611455565b6116aa60408301846112d7565b949350505050565b60006116bc6116cd565b90506116c88282611819565b919050565b6000604051905090565b600067ffffffffffffffff8211156116f2576116f1611879565b5b6116fb826118a8565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061172f82611742565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117778261177e565b9050919050565b600061178982611742565b9050919050565b600061179b826117a2565b9050919050565b60006117ad82611742565b9050919050565b60005b838110156117d25780820151818401526020810190506117b7565b838111156117e1576000848401525b50505050565b600060028204905060018216806117ff57607f821691505b602082108114156118135761181261184a565b5b50919050565b611822826118a8565b810181811067ffffffffffffffff8211171561184157611840611879565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e6572736869704d6f64756c652e627579696e673a204f776e6572206f6660008201527f206e66742063616e206e6f742062757920686973206f776e206e66742e000000602082015250565b7f4d61726b6574706c6163652e73656c6c696e674e46543a2053656e646572206860008201527f617320746f20626520746865206f776e6572206f6620746f6b656e0000000000602082015250565b7f4f776e61626c653a20546865206e6577206f776e6572206973206e6f772c207460008201527f6865207a65726f20616464726573732100000000000000000000000000000000602082015250565b7f4f776e6572736869704d6f64756c652e627579696e673a20546f6b656e20697360008201527f206e6f7420696e2073616c65206c6973742e0000000000000000000000000000602082015250565b7f4f776e6572736869704d6f64756c652e627579696e673a20455243323020746f60008201527f6b656e20616c6c6f77616e6365206973206c657373207468616e2073656c6c6960208201527f6e672070726963652e0000000000000000000000000000000000000000000000604082015250565b7f4f776e61626c653a205468652063616c6c6572206973206e6f7420746865206f60008201527f776e657221000000000000000000000000000000000000000000000000000000602082015250565b7f4d61726b6574706c6163652e73656c6c696e674e46543a204e6674496420646f60008201527f6573206e6f742065786973740000000000000000000000000000000000000000602082015250565b7f4f776e6572736869704d6f64756c652e627579696e673a204e6674496420646f60008201527f6573206e6f742065786973742e00000000000000000000000000000000000000602082015250565b611b6081611724565b8114611b6b57600080fd5b50565b611b7781611736565b8114611b8257600080fd5b50565b611b8e81611762565b8114611b9957600080fd5b5056fea2646970667358221220c385418435728aa8e1232e84b0f359bd8f224282a89a4c09bf7fa135f26c2cf664736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3143:24",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:24"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:24",
                "type": ""
              }
            ],
            "src": "7:143:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:207:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "305:128:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "320:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "324:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "349:74:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "395:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "406:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "391:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "391:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "415:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "359:31:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "359:64:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "349:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:24",
                "type": ""
              }
            ],
            "src": "156:284:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "557:485:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "603:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "612:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "615:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "605:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "605:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "605:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "578:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "587:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "574:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "574:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "599:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "570:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "570:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "567:2:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "629:128:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "644:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "658:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "648:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "673:74:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "719:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "730:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "715:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "715:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "739:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "683:31:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "683:64:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "673:6:24"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "767:129:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "782:16:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "796:2:24",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "786:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "812:74:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "858:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "869:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "854:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "854:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "878:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "822:31:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "822:64:24"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "812:6:24"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "906:129:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "921:16:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "935:2:24",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "925:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "951:74:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "997:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1008:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "993:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "993:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1017:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "961:31:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "961:64:24"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "951:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "511:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "522:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "534:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "542:6:24",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "550:6:24",
                "type": ""
              }
            ],
            "src": "446:596:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1194:220:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1204:74:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1270:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1275:2:24",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1211:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1211:67:24"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1204:3:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1376:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c433a4a883465c851482e8861768b3ae640c6d1a0d8d0d01dd5f602cbb5b7eab",
                      "nodeType": "YulIdentifier",
                      "src": "1287:88:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1287:93:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1287:93:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1389:19:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1400:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1405:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1396:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1389:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c433a4a883465c851482e8861768b3ae640c6d1a0d8d0d01dd5f602cbb5b7eab_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1182:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1190:3:24",
                "type": ""
              }
            ],
            "src": "1048:366:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1591:248:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1601:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1613:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1624:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1609:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1609:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1601:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1648:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1659:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1644:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1644:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1667:4:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1673:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1663:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1663:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1637:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1637:47:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1637:47:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1693:139:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1827:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c433a4a883465c851482e8861768b3ae640c6d1a0d8d0d01dd5f602cbb5b7eab_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1701:124:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1701:131:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1693:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c433a4a883465c851482e8861768b3ae640c6d1a0d8d0d01dd5f602cbb5b7eab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1571:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1586:4:24",
                "type": ""
              }
            ],
            "src": "1420:419:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1941:73:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1958:3:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1963:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1951:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1951:19:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1951:19:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1979:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1998:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2003:4:24",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1994:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1994:14:24"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1979:11:24"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1913:3:24",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1918:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1929:11:24",
                "type": ""
              }
            ],
            "src": "1845:169:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2065:51:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2075:35:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2104:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2086:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2086:24:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2075:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2047:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2057:7:24",
                "type": ""
              }
            ],
            "src": "2020:96:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2167:81:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2177:65:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2192:5:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2199:42:24",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2188:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2188:54:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2177:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2149:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2159:7:24",
                "type": ""
              }
            ],
            "src": "2122:126:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2305:269:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2315:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2329:4:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2335:1:24",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2325:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2325:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2315:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2346:38:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2376:4:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2382:1:24",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2372:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2372:12:24"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2350:18:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2423:51:24",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2437:27:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2451:6:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2459:4:24",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2447:3:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2447:17:24"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2437:6:24"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2403:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2396:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2396:26:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2393:2:24"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2526:42:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "2540:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2540:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2540:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2490:18:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2513:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2521:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2510:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2510:14:24"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2487:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:38:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2484:2:24"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2289:4:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2298:6:24",
                "type": ""
              }
            ],
            "src": "2254:320:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2608:152:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2625:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2628:77:24",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2618:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2618:88:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2618:88:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2722:1:24",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2725:4:24",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2715:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2715:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2715:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2746:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2749:4:24",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2739:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2739:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2739:15:24"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "2580:180:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2872:140:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2894:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2902:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2890:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2890:14:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2906:34:24",
                        "type": "",
                        "value": "The module deployer must be the "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2883:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2883:58:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2883:58:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2962:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2970:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2958:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2958:15:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2975:29:24",
                        "type": "",
                        "value": "owner of the base contract!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2951:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2951:54:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2951:54:24"
                }
              ]
            },
            "name": "store_literal_in_memory_c433a4a883465c851482e8861768b3ae640c6d1a0d8d0d01dd5f602cbb5b7eab",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2864:6:24",
                "type": ""
              }
            ],
            "src": "2766:246:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3061:79:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3118:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3127:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3130:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3120:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3120:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3120:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3084:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3109:5:24"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3091:17:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3091:24:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3081:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3081:35:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3074:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3074:43:24"
                  },
                  "nodeType": "YulIf",
                  "src": "3071:2:24"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3054:5:24",
                "type": ""
              }
            ],
            "src": "3018:122:24"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_c433a4a883465c851482e8861768b3ae640c6d1a0d8d0d01dd5f602cbb5b7eab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 59)\n        store_literal_in_memory_c433a4a883465c851482e8861768b3ae640c6d1a0d8d0d01dd5f602cbb5b7eab(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c433a4a883465c851482e8861768b3ae640c6d1a0d8d0d01dd5f602cbb5b7eab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c433a4a883465c851482e8861768b3ae640c6d1a0d8d0d01dd5f602cbb5b7eab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_c433a4a883465c851482e8861768b3ae640c6d1a0d8d0d01dd5f602cbb5b7eab(memPtr) {\n\n        mstore(add(memPtr, 0), \"The module deployer must be the \")\n\n        mstore(add(memPtr, 32), \"owner of the base contract!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:19421:24",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "102:259:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "112:75:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "179:6:24"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "137:41:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "137:49:24"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "121:15:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "121:66:24"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "112:5:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "203:5:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "210:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "196:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "196:21:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "226:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "241:5:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "248:4:24",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "237:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "237:16:24"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "230:3:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "291:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "300:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "303:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "293:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "293:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "293:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "272:3:24"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:24"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "268:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "268:16:24"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "286:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "265:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "265:25:24"
                  },
                  "nodeType": "YulIf",
                  "src": "262:2:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "338:3:24"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "343:3:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "348:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "316:21:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:39:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:39:24"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "75:3:24",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "80:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "88:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "96:5:24",
                "type": ""
              }
            ],
            "src": "7:354:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "419:87:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "429:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "451:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "438:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "438:20:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "429:5:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "494:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "467:26:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "467:33:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "467:33:24"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "397:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "405:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "413:5:24",
                "type": ""
              }
            ],
            "src": "367:139:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "575:80:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "585:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "600:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "594:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "594:13:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "585:5:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "643:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "616:26:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:33:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "616:33:24"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "553:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "561:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "569:5:24",
                "type": ""
              }
            ],
            "src": "512:143:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "721:77:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "731:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "746:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "740:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "740:13:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "731:5:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "786:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "762:23:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "762:30:24"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "699:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "707:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "715:5:24",
                "type": ""
              }
            ],
            "src": "661:137:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "891:215:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "940:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "949:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "952:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "942:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "942:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "942:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "919:6:24"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "927:4:24",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "915:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "915:17:24"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "934:3:24"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "911:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "911:27:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "904:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "904:35:24"
                  },
                  "nodeType": "YulIf",
                  "src": "901:2:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "965:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "985:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "979:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "979:13:24"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "969:6:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1001:99:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1073:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1081:4:24",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1069:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1069:17:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1088:6:24"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1096:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1010:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1010:90:24"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1001:5:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "869:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "877:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "885:5:24",
                "type": ""
              }
            ],
            "src": "818:288:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1164:87:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1174:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1196:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1183:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1183:20:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1174:5:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1239:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1212:26:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1212:33:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1212:33:24"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1142:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1150:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1158:5:24",
                "type": ""
              }
            ],
            "src": "1112:139:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1320:80:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1330:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1345:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1339:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1339:13:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1330:5:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1388:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1361:26:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1361:33:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1361:33:24"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1298:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1306:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1314:5:24",
                "type": ""
              }
            ],
            "src": "1257:143:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1472:196:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1518:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1527:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1530:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1520:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1520:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1520:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1493:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1502:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1489:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1489:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1514:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1485:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1485:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "1482:2:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1544:117:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1559:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1563:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1588:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1623:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1634:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1619:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1619:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1643:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1598:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1598:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1588:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1442:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1453:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:24",
                "type": ""
              }
            ],
            "src": "1406:262:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1751:207:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1797:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1806:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1809:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1799:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1799:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1799:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1772:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1781:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1768:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1768:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1793:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1764:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1764:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "1761:2:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1823:128:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1838:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1852:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1842:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1867:74:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1913:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1924:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1909:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1909:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1933:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1877:31:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1877:64:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1867:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1721:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1732:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1744:6:24",
                "type": ""
              }
            ],
            "src": "1674:284:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2038:204:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2084:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2093:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2096:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2086:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2086:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2086:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2059:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2068:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2055:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2055:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2080:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2051:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2051:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2048:2:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2110:125:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2125:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2139:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2129:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2154:71:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2197:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2208:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2193:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2193:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2217:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2164:28:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2164:61:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2154:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2008:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2019:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2031:6:24",
                "type": ""
              }
            ],
            "src": "1964:278:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2335:303:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2381:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2390:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2393:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2383:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2383:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2383:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2356:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2365:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2352:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2352:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2377:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2348:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2348:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2345:2:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2407:224:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2422:38:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2446:9:24"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2457:1:24",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2442:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2442:17:24"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2436:5:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2436:24:24"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2426:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2507:16:24",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2516:1:24",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2519:1:24",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2509:6:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2509:12:24"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2509:12:24"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2479:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2487:18:24",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2476:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2476:30:24"
                      },
                      "nodeType": "YulIf",
                      "src": "2473:2:24"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2537:84:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2593:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2604:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2589:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2589:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2613:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2547:41:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2547:74:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2537:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2305:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2316:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2328:6:24",
                "type": ""
              }
            ],
            "src": "2248:390:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2710:196:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2756:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2765:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2768:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2758:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2758:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2758:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2731:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2740:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2727:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2727:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2752:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2723:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2723:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2720:2:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2782:117:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2797:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2811:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2801:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2826:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2861:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2872:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2857:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2857:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2881:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2836:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2836:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2826:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2680:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2691:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2703:6:24",
                "type": ""
              }
            ],
            "src": "2644:262:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2989:207:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3035:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3044:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3047:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3037:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3037:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3037:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3010:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3019:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3006:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3006:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3031:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3002:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3002:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2999:2:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3061:128:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3076:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3090:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3080:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3105:74:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3151:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3162:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3147:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3147:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3171:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3115:31:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3115:64:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3105:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2959:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2970:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2982:6:24",
                "type": ""
              }
            ],
            "src": "2912:284:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3285:324:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3331:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3340:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3343:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3333:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3333:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3333:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3306:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3315:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3302:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3302:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3327:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3298:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3298:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "3295:2:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3357:117:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3372:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3386:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3376:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3401:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3436:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3447:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3432:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3432:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3456:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3411:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3411:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3401:6:24"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3484:118:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3499:16:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3513:2:24",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3503:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3529:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3564:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3575:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3560:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3560:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3584:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3539:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3539:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3529:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3247:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3258:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3270:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3278:6:24",
                "type": ""
              }
            ],
            "src": "3202:407:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3680:53:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3697:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3720:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3702:17:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3702:24:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3690:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3690:37:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3690:37:24"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3668:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3675:3:24",
                "type": ""
              }
            ],
            "src": "3615:118:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3822:84:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3839:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3893:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IAvaraNft_$2736_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3844:48:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3844:55:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3832:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3832:68:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3832:68:24"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IAvaraNft_$2736_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3810:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3817:3:24",
                "type": ""
              }
            ],
            "src": "3739:167:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3992:81:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4009:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4060:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$4386_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4014:45:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4014:52:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4002:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4002:65:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4002:65:24"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$4386_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3980:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3987:3:24",
                "type": ""
              }
            ],
            "src": "3912:161:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4171:272:24",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4181:53:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4228:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4195:32:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4195:39:24"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4185:6:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4243:78:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4309:3:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4314:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4250:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4250:71:24"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4243:3:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4356:5:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4363:4:24",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4352:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4352:16:24"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4370:3:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4375:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4330:21:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4330:52:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4330:52:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4391:46:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4402:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4429:6:24"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "4407:21:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4407:29:24"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4398:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4398:39:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4391:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4152:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4159:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4167:3:24",
                "type": ""
              }
            ],
            "src": "4079:364:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4595:220:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4605:74:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4671:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4676:2:24",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4612:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4612:67:24"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4605:3:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4777:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101",
                      "nodeType": "YulIdentifier",
                      "src": "4688:88:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4688:93:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4688:93:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4790:19:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4801:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4806:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4797:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4797:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4790:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4583:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4591:3:24",
                "type": ""
              }
            ],
            "src": "4449:366:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4967:220:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4977:74:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5043:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5048:2:24",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4984:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4984:67:24"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4977:3:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5149:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9",
                      "nodeType": "YulIdentifier",
                      "src": "5060:88:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5060:93:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5060:93:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5162:19:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5173:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5178:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5169:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5169:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5162:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4955:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4963:3:24",
                "type": ""
              }
            ],
            "src": "4821:366:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5339:220:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5349:74:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5415:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5420:2:24",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5356:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5356:67:24"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5349:3:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5521:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_71f4f7441c0809885babd54fc117a1efbd16af92943bc7234017be334f6a3715",
                      "nodeType": "YulIdentifier",
                      "src": "5432:88:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5432:93:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5432:93:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5534:19:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5545:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5550:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5541:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5541:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5534:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_71f4f7441c0809885babd54fc117a1efbd16af92943bc7234017be334f6a3715_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5327:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5335:3:24",
                "type": ""
              }
            ],
            "src": "5193:366:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5711:220:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5721:74:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5787:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5792:2:24",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5728:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5728:67:24"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5721:3:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5893:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50",
                      "nodeType": "YulIdentifier",
                      "src": "5804:88:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5804:93:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5804:93:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5906:19:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5917:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5922:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5913:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5913:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5906:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5699:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5707:3:24",
                "type": ""
              }
            ],
            "src": "5565:366:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6083:220:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6093:74:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6159:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6164:2:24",
                        "type": "",
                        "value": "73"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6100:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6100:67:24"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6093:3:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6265:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67",
                      "nodeType": "YulIdentifier",
                      "src": "6176:88:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6176:93:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6176:93:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6278:19:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6289:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6294:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6285:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6285:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6278:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6071:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6079:3:24",
                "type": ""
              }
            ],
            "src": "5937:366:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6455:220:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6465:74:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6531:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6536:2:24",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6472:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6472:67:24"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6465:3:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6637:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_aa5d622ac9605625cf82d366dbfbbf5a9367e831bf97b0f33f19e9f9519e3a2d",
                      "nodeType": "YulIdentifier",
                      "src": "6548:88:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:93:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6548:93:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6650:19:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6661:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6666:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6657:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6657:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6650:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_aa5d622ac9605625cf82d366dbfbbf5a9367e831bf97b0f33f19e9f9519e3a2d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6443:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6451:3:24",
                "type": ""
              }
            ],
            "src": "6309:366:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6827:220:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6837:74:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6903:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6908:2:24",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6844:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6844:67:24"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6837:3:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7009:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e",
                      "nodeType": "YulIdentifier",
                      "src": "6920:88:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6920:93:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6920:93:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7022:19:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7033:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7038:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7029:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7029:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7022:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6815:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6823:3:24",
                "type": ""
              }
            ],
            "src": "6681:366:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7199:220:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7209:74:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7275:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7280:2:24",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7216:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7216:67:24"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7209:3:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7381:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6",
                      "nodeType": "YulIdentifier",
                      "src": "7292:88:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7292:93:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7292:93:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7394:19:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7405:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7410:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7401:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7401:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7394:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7187:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7195:3:24",
                "type": ""
              }
            ],
            "src": "7053:366:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7490:53:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7507:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7530:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7512:17:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7512:24:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7500:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7500:37:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7500:37:24"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7478:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7485:3:24",
                "type": ""
              }
            ],
            "src": "7425:118:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7647:124:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7657:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7669:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7680:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7665:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7665:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7657:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7737:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7750:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7761:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7746:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7746:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7693:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7693:71:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7693:71:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7619:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7631:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7642:4:24",
                "type": ""
              }
            ],
            "src": "7549:222:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7903:206:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7913:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7925:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7936:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7921:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7921:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7913:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7993:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8006:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8017:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8002:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8002:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7949:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7949:71:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7949:71:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8074:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8087:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8098:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8083:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8083:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8030:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8030:72:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8030:72:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7867:9:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7879:6:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7887:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7898:4:24",
                "type": ""
              }
            ],
            "src": "7777:332:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8269:288:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8279:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8291:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8302:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8287:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8287:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8279:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8359:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8372:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8383:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8368:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8368:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8315:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8315:71:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8315:71:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8440:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8453:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8464:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8449:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8449:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8396:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8396:72:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8396:72:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8522:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8535:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8546:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8531:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8531:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8478:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8478:72:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8478:72:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8225:9:24",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8237:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8245:6:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8253:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8264:4:24",
                "type": ""
              }
            ],
            "src": "8115:442:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8679:142:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8689:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8701:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8712:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8697:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8697:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8689:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8787:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8800:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8811:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8796:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8796:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IAvaraNft_$2736_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8725:61:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8725:89:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8725:89:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IAvaraNft_$2736__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8651:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8663:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8674:4:24",
                "type": ""
              }
            ],
            "src": "8563:258:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8940:139:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8950:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8962:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8973:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8958:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8958:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8950:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9045:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9058:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9069:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9054:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9054:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$4386_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8986:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8986:86:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8986:86:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$4386__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8912:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8924:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8935:4:24",
                "type": ""
              }
            ],
            "src": "8827:252:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9203:195:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9213:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9225:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9236:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9221:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9221:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9213:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9260:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9271:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9256:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9256:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9279:4:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9285:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9275:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9275:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9249:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9249:47:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9249:47:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9305:86:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9377:6:24"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9386:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9313:63:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9313:78:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9305:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9175:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9187:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9198:4:24",
                "type": ""
              }
            ],
            "src": "9085:313:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9575:248:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9585:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9597:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9608:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9593:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9593:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9585:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9632:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9643:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9628:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9628:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9651:4:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9657:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9647:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9647:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9621:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9621:47:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9621:47:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9677:139:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9811:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9685:124:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9685:131:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9677:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9555:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9570:4:24",
                "type": ""
              }
            ],
            "src": "9404:419:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10000:248:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10010:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10022:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10033:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10018:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10018:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10010:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10057:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10068:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10053:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10053:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10076:4:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10082:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10072:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10072:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10046:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10046:47:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10046:47:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10102:139:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10236:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10110:124:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10110:131:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10102:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9980:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9995:4:24",
                "type": ""
              }
            ],
            "src": "9829:419:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10425:248:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10435:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10447:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10458:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10443:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10443:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10435:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10482:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10493:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10478:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10478:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10501:4:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10507:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10497:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10497:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10471:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10471:47:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10471:47:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10527:139:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10661:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_71f4f7441c0809885babd54fc117a1efbd16af92943bc7234017be334f6a3715_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10535:124:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10535:131:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10527:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_71f4f7441c0809885babd54fc117a1efbd16af92943bc7234017be334f6a3715__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10405:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10420:4:24",
                "type": ""
              }
            ],
            "src": "10254:419:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10850:248:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10860:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10872:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10883:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10868:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10868:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10860:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10907:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10918:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10903:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10903:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10926:4:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10932:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10922:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10922:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10896:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10896:47:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10896:47:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10952:139:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11086:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10960:124:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10960:131:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10952:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10830:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10845:4:24",
                "type": ""
              }
            ],
            "src": "10679:419:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11275:248:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11285:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11297:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11308:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11293:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11293:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11285:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11332:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11343:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11328:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11328:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11351:4:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11357:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11347:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11347:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11321:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11321:47:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11321:47:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11377:139:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11511:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11385:124:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11385:131:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11377:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11255:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11270:4:24",
                "type": ""
              }
            ],
            "src": "11104:419:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11700:248:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11710:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11722:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11733:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11718:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11718:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11710:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11757:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11768:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11753:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11753:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11776:4:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11782:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11772:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11772:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11746:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11746:47:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11746:47:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11802:139:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11936:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_aa5d622ac9605625cf82d366dbfbbf5a9367e831bf97b0f33f19e9f9519e3a2d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11810:124:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11810:131:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11802:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aa5d622ac9605625cf82d366dbfbbf5a9367e831bf97b0f33f19e9f9519e3a2d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11680:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11695:4:24",
                "type": ""
              }
            ],
            "src": "11529:419:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12125:248:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12135:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12147:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12158:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12143:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12143:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12135:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12182:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12193:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12178:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12178:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12201:4:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12207:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12197:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12197:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12171:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12171:47:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12171:47:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12227:139:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12361:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12235:124:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12235:131:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12227:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12105:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12120:4:24",
                "type": ""
              }
            ],
            "src": "11954:419:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12550:248:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12560:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12572:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12583:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12568:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12568:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12560:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12607:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12618:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12603:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12603:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12626:4:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12632:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12622:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12622:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12596:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12596:47:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12596:47:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12652:139:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12786:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12660:124:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12660:131:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12652:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12530:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12545:4:24",
                "type": ""
              }
            ],
            "src": "12379:419:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12902:124:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12912:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12924:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12935:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12920:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12920:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12912:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12992:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13005:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13016:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13001:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13001:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12948:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12948:71:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12948:71:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12874:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12886:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12897:4:24",
                "type": ""
              }
            ],
            "src": "12804:222:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13158:206:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13168:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13180:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13191:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13176:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13176:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13168:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13248:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13261:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13272:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13257:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13257:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13204:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13204:71:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13204:71:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13329:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13342:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13353:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13338:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13338:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13285:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13285:72:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13285:72:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13122:9:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13134:6:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13142:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13153:4:24",
                "type": ""
              }
            ],
            "src": "13032:332:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13524:288:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13534:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13546:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13557:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13542:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13542:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13534:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13614:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13627:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13638:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13623:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13623:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13570:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13570:71:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13570:71:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13695:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13708:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13719:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13704:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13704:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13651:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13651:72:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13651:72:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "13777:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13790:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13801:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13786:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13786:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13733:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13733:72:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13733:72:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13480:9:24",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13492:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13500:6:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13508:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13519:4:24",
                "type": ""
              }
            ],
            "src": "13370:442:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13859:88:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13869:30:24",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "13879:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13879:20:24"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "13869:6:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "13928:6:24"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "13936:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "13908:19:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13908:33:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13908:33:24"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "13843:4:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13852:6:24",
                "type": ""
              }
            ],
            "src": "13818:129:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13993:35:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14003:19:24",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14019:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14013:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14013:9:24"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "14003:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13986:6:24",
                "type": ""
              }
            ],
            "src": "13953:75:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14101:241:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14206:22:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "14208:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14208:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14208:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14178:6:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14186:18:24",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14175:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14175:30:24"
                  },
                  "nodeType": "YulIf",
                  "src": "14172:2:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14238:37:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14268:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "14246:21:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14246:29:24"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "14238:4:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14312:23:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "14324:4:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14330:4:24",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14320:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14320:15:24"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "14312:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14085:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "14096:4:24",
                "type": ""
              }
            ],
            "src": "14034:308:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14407:40:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14418:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14434:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14428:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14428:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "14418:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14390:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14400:6:24",
                "type": ""
              }
            ],
            "src": "14348:99:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14549:73:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14566:3:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14571:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14559:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14559:19:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14559:19:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14587:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14606:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14611:4:24",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14602:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14602:14:24"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "14587:11:24"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14521:3:24",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14526:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "14537:11:24",
                "type": ""
              }
            ],
            "src": "14453:169:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14673:51:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14683:35:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14712:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "14694:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14694:24:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14683:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14655:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14665:7:24",
                "type": ""
              }
            ],
            "src": "14628:96:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14772:48:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14782:32:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14807:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14800:6:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14800:13:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14793:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14793:21:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14782:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14754:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14764:7:24",
                "type": ""
              }
            ],
            "src": "14730:90:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14871:81:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14881:65:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14896:5:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14903:42:24",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14892:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14892:54:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14881:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14853:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14863:7:24",
                "type": ""
              }
            ],
            "src": "14826:126:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15003:32:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15013:16:24",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "15024:5:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15013:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14985:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14995:7:24",
                "type": ""
              }
            ],
            "src": "14958:77:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15119:84:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15129:68:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15191:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IAvaraNft_$2736_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "15142:48:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15142:55:24"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "15129:9:24"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IAvaraNft_$2736_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15099:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "15109:9:24",
                "type": ""
              }
            ],
            "src": "15041:162:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15287:53:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15297:37:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15328:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "15310:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15310:24:24"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "15297:9:24"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IAvaraNft_$2736_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15267:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "15277:9:24",
                "type": ""
              }
            ],
            "src": "15209:131:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15421:81:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15431:65:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15490:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$4386_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "15444:45:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15444:52:24"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "15431:9:24"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$4386_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15401:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "15411:9:24",
                "type": ""
              }
            ],
            "src": "15346:156:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15583:53:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15593:37:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15624:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "15606:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15606:24:24"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "15593:9:24"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$4386_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15563:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "15573:9:24",
                "type": ""
              }
            ],
            "src": "15508:128:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15691:258:24",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15701:10:24",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "15710:1:24",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "15705:1:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15770:63:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "15795:3:24"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "15800:1:24"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15791:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15791:11:24"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "15814:3:24"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "15819:1:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "15810:3:24"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15810:11:24"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "15804:5:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15804:18:24"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15784:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15784:39:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15784:39:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "15731:1:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15734:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "15728:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15728:13:24"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "15742:19:24",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "15744:15:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "15753:1:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15756:2:24",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "15749:3:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15749:10:24"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "15744:1:24"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "15724:3:24",
                    "statements": []
                  },
                  "src": "15720:113:24"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15867:76:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "15917:3:24"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "15922:6:24"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15913:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15913:16:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15931:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15906:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15906:27:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15906:27:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "15848:1:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15851:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15845:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15845:13:24"
                  },
                  "nodeType": "YulIf",
                  "src": "15842:2:24"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "15673:3:24",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "15678:3:24",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "15683:6:24",
                "type": ""
              }
            ],
            "src": "15642:307:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16006:269:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16016:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "16030:4:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16036:1:24",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "16026:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16026:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "16016:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16047:38:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "16077:4:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16083:1:24",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "16073:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16073:12:24"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "16051:18:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16124:51:24",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16138:27:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "16152:6:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16160:4:24",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "16148:3:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16148:17:24"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "16138:6:24"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "16104:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16097:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16097:26:24"
                  },
                  "nodeType": "YulIf",
                  "src": "16094:2:24"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16227:42:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "16241:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16241:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16241:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "16191:18:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "16214:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16222:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "16211:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16211:14:24"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "16188:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16188:38:24"
                  },
                  "nodeType": "YulIf",
                  "src": "16185:2:24"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "15990:4:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "15999:6:24",
                "type": ""
              }
            ],
            "src": "15955:320:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16324:238:24",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16334:58:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "16356:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "16386:4:24"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "16364:21:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16364:27:24"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16352:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16352:40:24"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "16338:10:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16503:22:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "16505:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16505:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16505:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "16446:10:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16458:18:24",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "16443:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16443:34:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "16482:10:24"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16494:6:24"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "16479:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16479:22:24"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "16440:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16440:62:24"
                  },
                  "nodeType": "YulIf",
                  "src": "16437:2:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16541:2:24",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "16545:10:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16534:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16534:22:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16534:22:24"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16310:6:24",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "16318:4:24",
                "type": ""
              }
            ],
            "src": "16281:281:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16596:152:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16613:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16616:77:24",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16606:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16606:88:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16606:88:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16710:1:24",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16713:4:24",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16703:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16703:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16703:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16734:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16737:4:24",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16727:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16727:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16727:15:24"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "16568:180:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16782:152:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16799:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16802:77:24",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16792:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16792:88:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16792:88:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16896:1:24",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16899:4:24",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16889:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16889:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16889:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16920:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16923:4:24",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16913:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16913:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16913:15:24"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "16754:180:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16988:54:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16998:38:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17016:5:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17023:2:24",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17012:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17012:14:24"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17032:2:24",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "17028:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17028:7:24"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "17008:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17008:28:24"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "16998:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16971:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "16981:6:24",
                "type": ""
              }
            ],
            "src": "16940:102:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17154:142:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17176:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17184:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17172:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17172:14:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17188:34:24",
                        "type": "",
                        "value": "OwnershipModule.buying: Owner of"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17165:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17165:58:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17165:58:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17244:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17252:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17240:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17240:15:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17257:31:24",
                        "type": "",
                        "value": " nft can not buy his own nft."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17233:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17233:56:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17233:56:24"
                }
              ]
            },
            "name": "store_literal_in_memory_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17146:6:24",
                "type": ""
              }
            ],
            "src": "17048:248:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17408:140:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17430:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17438:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17426:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17426:14:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17442:34:24",
                        "type": "",
                        "value": "Marketplace.sellingNFT: Sender h"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17419:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17419:58:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17419:58:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17498:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17506:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17494:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17494:15:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17511:29:24",
                        "type": "",
                        "value": "as to be the owner of token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17487:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17487:54:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17487:54:24"
                }
              ]
            },
            "name": "store_literal_in_memory_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17400:6:24",
                "type": ""
              }
            ],
            "src": "17302:246:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17660:129:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17682:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17690:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17678:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17678:14:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17694:34:24",
                        "type": "",
                        "value": "Ownable: The new owner is now, t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17671:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17671:58:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17671:58:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17750:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17758:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17746:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17746:15:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17763:18:24",
                        "type": "",
                        "value": "he zero address!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17739:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17739:43:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17739:43:24"
                }
              ]
            },
            "name": "store_literal_in_memory_71f4f7441c0809885babd54fc117a1efbd16af92943bc7234017be334f6a3715",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17652:6:24",
                "type": ""
              }
            ],
            "src": "17554:235:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17901:131:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17923:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17931:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17919:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17919:14:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17935:34:24",
                        "type": "",
                        "value": "OwnershipModule.buying: Token is"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17912:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17912:58:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17912:58:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17991:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17999:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17987:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17987:15:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18004:20:24",
                        "type": "",
                        "value": " not in sale list."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17980:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17980:45:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17980:45:24"
                }
              ]
            },
            "name": "store_literal_in_memory_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17893:6:24",
                "type": ""
              }
            ],
            "src": "17795:237:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18144:191:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18166:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18174:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18162:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18162:14:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18178:34:24",
                        "type": "",
                        "value": "OwnershipModule.buying: ERC20 to"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18155:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18155:58:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18155:58:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18234:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18242:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18230:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18230:15:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18247:34:24",
                        "type": "",
                        "value": "ken allowance is less than selli"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18223:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18223:59:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18223:59:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18303:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18311:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18299:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18299:15:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18316:11:24",
                        "type": "",
                        "value": "ng price."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18292:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18292:36:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18292:36:24"
                }
              ]
            },
            "name": "store_literal_in_memory_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18136:6:24",
                "type": ""
              }
            ],
            "src": "18038:297:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18447:118:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18469:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18477:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18465:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18465:14:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18481:34:24",
                        "type": "",
                        "value": "Ownable: The caller is not the o"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18458:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18458:58:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18458:58:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18537:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18545:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18533:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18533:15:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18550:7:24",
                        "type": "",
                        "value": "wner!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18526:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18526:32:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18526:32:24"
                }
              ]
            },
            "name": "store_literal_in_memory_aa5d622ac9605625cf82d366dbfbbf5a9367e831bf97b0f33f19e9f9519e3a2d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18439:6:24",
                "type": ""
              }
            ],
            "src": "18341:224:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18677:125:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18699:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18707:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18695:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18695:14:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18711:34:24",
                        "type": "",
                        "value": "Marketplace.sellingNFT: NftId do"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18688:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18688:58:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18688:58:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18767:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18775:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18763:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18763:15:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18780:14:24",
                        "type": "",
                        "value": "es not exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18756:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18756:39:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18756:39:24"
                }
              ]
            },
            "name": "store_literal_in_memory_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18669:6:24",
                "type": ""
              }
            ],
            "src": "18571:231:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18914:126:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18936:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18944:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18932:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18932:14:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18948:34:24",
                        "type": "",
                        "value": "OwnershipModule.buying: NftId do"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18925:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18925:58:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18925:58:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19004:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19012:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19000:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19000:15:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19017:15:24",
                        "type": "",
                        "value": "es not exist."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18993:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18993:40:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18993:40:24"
                }
              ]
            },
            "name": "store_literal_in_memory_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18906:6:24",
                "type": ""
              }
            ],
            "src": "18808:232:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19089:79:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19146:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19155:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19158:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19148:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19148:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19148:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19112:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19137:5:24"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "19119:17:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19119:24:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19109:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19109:35:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19102:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19102:43:24"
                  },
                  "nodeType": "YulIf",
                  "src": "19099:2:24"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19082:5:24",
                "type": ""
              }
            ],
            "src": "19046:122:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19214:76:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19268:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19277:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19280:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19270:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19270:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19270:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19237:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19259:5:24"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "19244:14:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19244:21:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19234:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19234:32:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19227:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19227:40:24"
                  },
                  "nodeType": "YulIf",
                  "src": "19224:2:24"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19207:5:24",
                "type": ""
              }
            ],
            "src": "19174:116:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19339:79:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19396:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19405:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19408:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19398:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19398:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19398:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19362:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19387:5:24"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "19369:17:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19369:24:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19359:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19359:35:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19352:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19352:43:24"
                  },
                  "nodeType": "YulIf",
                  "src": "19349:2:24"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19332:5:24",
                "type": ""
              }
            ],
            "src": "19296:122:24"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IAvaraNft_$2736_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IAvaraNft_$2736_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$4386_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$4386_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 59)\n        store_literal_in_memory_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_71f4f7441c0809885babd54fc117a1efbd16af92943bc7234017be334f6a3715_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_71f4f7441c0809885babd54fc117a1efbd16af92943bc7234017be334f6a3715(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 73)\n        store_literal_in_memory_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_stringliteral_aa5d622ac9605625cf82d366dbfbbf5a9367e831bf97b0f33f19e9f9519e3a2d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_aa5d622ac9605625cf82d366dbfbbf5a9367e831bf97b0f33f19e9f9519e3a2d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IAvaraNft_$2736__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IAvaraNft_$2736_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$4386__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$4386_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_71f4f7441c0809885babd54fc117a1efbd16af92943bc7234017be334f6a3715__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71f4f7441c0809885babd54fc117a1efbd16af92943bc7234017be334f6a3715_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa5d622ac9605625cf82d366dbfbbf5a9367e831bf97b0f33f19e9f9519e3a2d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa5d622ac9605625cf82d366dbfbbf5a9367e831bf97b0f33f19e9f9519e3a2d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IAvaraNft_$2736_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IAvaraNft_$2736_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IAvaraNft_$2736_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$4386_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$4386_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$4386_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101(memPtr) {\n\n        mstore(add(memPtr, 0), \"OwnershipModule.buying: Owner of\")\n\n        mstore(add(memPtr, 32), \" nft can not buy his own nft.\")\n\n    }\n\n    function store_literal_in_memory_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Marketplace.sellingNFT: Sender h\")\n\n        mstore(add(memPtr, 32), \"as to be the owner of token\")\n\n    }\n\n    function store_literal_in_memory_71f4f7441c0809885babd54fc117a1efbd16af92943bc7234017be334f6a3715(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: The new owner is now, t\")\n\n        mstore(add(memPtr, 32), \"he zero address!\")\n\n    }\n\n    function store_literal_in_memory_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50(memPtr) {\n\n        mstore(add(memPtr, 0), \"OwnershipModule.buying: Token is\")\n\n        mstore(add(memPtr, 32), \" not in sale list.\")\n\n    }\n\n    function store_literal_in_memory_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67(memPtr) {\n\n        mstore(add(memPtr, 0), \"OwnershipModule.buying: ERC20 to\")\n\n        mstore(add(memPtr, 32), \"ken allowance is less than selli\")\n\n        mstore(add(memPtr, 64), \"ng price.\")\n\n    }\n\n    function store_literal_in_memory_aa5d622ac9605625cf82d366dbfbbf5a9367e831bf97b0f33f19e9f9519e3a2d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: The caller is not the o\")\n\n        mstore(add(memPtr, 32), \"wner!\")\n\n    }\n\n    function store_literal_in_memory_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Marketplace.sellingNFT: NftId do\")\n\n        mstore(add(memPtr, 32), \"es not exist\")\n\n    }\n\n    function store_literal_in_memory_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6(memPtr) {\n\n        mstore(add(memPtr, 0), \"OwnershipModule.buying: NftId do\")\n\n        mstore(add(memPtr, 32), \"es not exist.\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "940:2128:3:-:0;;;1281:225;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1369:6;1377:12;979:346:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1080:6;1390:20:6;1400:9;1390;;;:20;;:::i;:::-;1349:68;1128:12:4::1;1098:13;;:44;;;;;;;;;;;;;;;;;;1185:6;1160:31;;:13;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;;1152:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;1280:4;1266:11;:18;;;;;;;;;;;;:::i;:::-;;1311:7;1294:14;:24;;;;;;;;;;;;:::i;:::-;;979:346:::0;;;;1444:16:3::1;1423:8;;:38;;;;;;;;;;;;;;;;;;1486:12;1471:5;;:28;;;;;;;;;;;;;;;;;;1281:225:::0;;;940:2128;;2723:173:6;2795:6;;;;;;;;;;2778:14;;:23;;;;;;;;;;;;;;;;;;2820:8;2811:6;;:17;;;;;;;;;;;;;;;;;;2880:8;2843:46;;2864:14;;;;;;;;;;;2843:46;;;;;;;;;;;;2723:173;:::o;940:2128:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:143:24:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:596::-;534:6;542;550;599:2;587:9;578:7;574:23;570:32;567:2;;;615:1;612;605:12;567:2;658:1;683:64;739:7;730:6;719:9;715:22;683:64;:::i;:::-;673:74;;629:128;796:2;822:64;878:7;869:6;858:9;854:22;822:64;:::i;:::-;812:74;;767:129;935:2;961:64;1017:7;1008:6;997:9;993:22;961:64;:::i;:::-;951:74;;906:129;557:485;;;;;:::o;1048:366::-;1190:3;1211:67;1275:2;1270:3;1211:67;:::i;:::-;1204:74;;1287:93;1376:3;1287:93;:::i;:::-;1405:2;1400:3;1396:12;1389:19;;1194:220;;;:::o;1420:419::-;1586:4;1624:2;1613:9;1609:18;1601:26;;1673:9;1667:4;1663:20;1659:1;1648:9;1644:17;1637:47;1701:131;1827:4;1701:131;:::i;:::-;1693:139;;1591:248;;;:::o;1845:169::-;1929:11;1963:6;1958:3;1951:19;2003:4;1998:3;1994:14;1979:29;;1941:73;;;;:::o;2020:96::-;2057:7;2086:24;2104:5;2086:24;:::i;:::-;2075:35;;2065:51;;;:::o;2122:126::-;2159:7;2199:42;2192:5;2188:54;2177:65;;2167:81;;;:::o;2254:320::-;2298:6;2335:1;2329:4;2325:12;2315:22;;2382:1;2376:4;2372:12;2403:18;2393:2;;2459:4;2451:6;2447:17;2437:27;;2393:2;2521;2513:6;2510:14;2490:18;2487:38;2484:2;;;2540:18;;:::i;:::-;2484:2;2305:269;;;;:::o;2580:180::-;2628:77;2625:1;2618:88;2725:4;2722:1;2715:15;2749:4;2746:1;2739:15;2766:246;2906:34;2902:1;2894:6;2890:14;2883:58;2975:29;2970:2;2962:6;2958:15;2951:54;2872:140;:::o;3018:122::-;3091:24;3109:5;3091:24;:::i;:::-;3084:5;3081:35;3071:2;;3130:1;3127;3120:12;3071:2;3061:79;:::o;940:2128:3:-;;;;;;;",
  "deployedSourceMap": "940:2128:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1017:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;986:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2954:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1655:101:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2146:92;;;:::i;:::-;;1512:438:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1493:85:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1384:95:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1541:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1955:848:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2387:199:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1017:19:3;;;;;;;;;;;;;:::o;986:25::-;;;;;;;;;;;;;:::o;2954:112::-;3003:13;1894:12:6;:10;:12::i;:::-;1883:23;;:7;:5;:7::i;:::-;:23;;;1875:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3035:17:3::1;:15;:17::i;:::-;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3028:31;;2954:112:::0;:::o;1655:101:6:-;1709:7;1735:14;;;;;;;;;;;1728:21;;1655:101;:::o;2146:92::-;1894:12;:10;:12::i;:::-;1883:23;;:7;:5;:7::i;:::-;:23;;;1875:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2210:21:::1;2228:1;2210:9;:21::i;:::-;2146:92::o:0;1512:438:3:-;1585:8;;;;;;;;;;;:15;;;1601:5;1585:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1701:12;:10;:12::i;:::-;1674:39;;:8;;;;;;;;;;;:16;;;1691:5;1674:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;;1666:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;1808:80;;;;;;;;1837:6;1808:80;;;;1865:12;:10;:12::i;:::-;1808:80;;;;;1787:11;:18;1799:5;1787:18;;;;;;;;;;;:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1904:39;1915:5;1922:6;1930:12;:10;:12::i;:::-;1904:39;;;;;;;;:::i;:::-;;;;;;;;1512:438;;:::o;1493:85:6:-;1539:7;1565:6;;;;;;;;;;;1558:13;;1493:85;:::o;1384:95:4:-;1429:13;1461:11;1454:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:95;:::o;1541:101::-;1589:13;1621:14;1614:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1541:101;:::o;1955:848:3:-;2011:8;;;;;;;;;;;:15;;;2027:5;2011:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2003:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2129:1;2101:11;:18;2113:5;2101:18;;;;;;;;;;;:24;;;:29;;2093:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;2230:12;:10;:12::i;:::-;2203:39;;:8;;;;;;;;;;;:16;;;2220:5;2203:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;;;2195:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;2318:20;2341:11;:18;2353:5;2341:18;;;;;;;;;;;2318:41;;2426:4;:10;;;2377:5;;;;;;;;;;;:15;;;2393:12;:10;:12::i;:::-;2415:4;2377:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;2369:145;;;;;;;;;;;;:::i;:::-;;;;;;;;;2524:5;;;;;;;;;;;:18;;;2543:12;:10;:12::i;:::-;2557:4;:11;;;;;;;;;;;;2570:4;:10;;;2524:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2592:8;;;;;;;;;;;:25;;;2618:8;;;;;;;;;;;:16;;;2635:5;2618:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2643:12;:10;:12::i;:::-;2657:5;2592:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2700:1;2673:11;:18;2685:5;2673:18;;;;;;;;;;;:24;;:28;;;;2739:12;:10;:12::i;:::-;2711:11;:18;2723:5;2711:18;;;;;;;;;;;:25;;;:40;;;;;;;;;;;;;;;;;;2766:30;2776:5;2783:12;:10;:12::i;:::-;2766:30;;;;;;;:::i;:::-;;;;;;;;1955:848;;:::o;2387:199:6:-;1894:12;:10;:12::i;:::-;1883:23;;:7;:5;:7::i;:::-;:23;;;1875:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2495:1:::1;2475:22;;:8;:22;;;;2467:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2560:19;2570:8;2560:9;:19::i;:::-;2387:199:::0;:::o;1019:96:5:-;1072:7;1098:10;1091:17;;1019:96;:::o;1703:94:4:-;1753:5;1777:13;;;;;;;;;;;1770:20;;1703:94;:::o;2723:173:6:-;2795:6;;;;;;;;;;2778:14;;:23;;;;;;;;;;;;;;;;;;2820:8;2811:6;;:17;;;;;;;;;;;;;;;;;;2880:8;2843:46;;2864:14;;;;;;;;;;;2843:46;;;;;;;;;;;;2723:173;:::o;7:354:24:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;367:139::-;413:5;451:6;438:20;429:29;;467:33;494:5;467:33;:::i;:::-;419:87;;;;:::o;512:143::-;569:5;600:6;594:13;585:22;;616:33;643:5;616:33;:::i;:::-;575:80;;;;:::o;661:137::-;715:5;746:6;740:13;731:22;;762:30;786:5;762:30;:::i;:::-;721:77;;;;:::o;818:288::-;885:5;934:3;927:4;919:6;915:17;911:27;901:2;;952:1;949;942:12;901:2;985:6;979:13;1010:90;1096:3;1088:6;1081:4;1073:6;1069:17;1010:90;:::i;:::-;1001:99;;891:215;;;;;:::o;1112:139::-;1158:5;1196:6;1183:20;1174:29;;1212:33;1239:5;1212:33;:::i;:::-;1164:87;;;;:::o;1257:143::-;1314:5;1345:6;1339:13;1330:22;;1361:33;1388:5;1361:33;:::i;:::-;1320:80;;;;:::o;1406:262::-;1465:6;1514:2;1502:9;1493:7;1489:23;1485:32;1482:2;;;1530:1;1527;1520:12;1482:2;1573:1;1598:53;1643:7;1634:6;1623:9;1619:22;1598:53;:::i;:::-;1588:63;;1544:117;1472:196;;;;:::o;1674:284::-;1744:6;1793:2;1781:9;1772:7;1768:23;1764:32;1761:2;;;1809:1;1806;1799:12;1761:2;1852:1;1877:64;1933:7;1924:6;1913:9;1909:22;1877:64;:::i;:::-;1867:74;;1823:128;1751:207;;;;:::o;1964:278::-;2031:6;2080:2;2068:9;2059:7;2055:23;2051:32;2048:2;;;2096:1;2093;2086:12;2048:2;2139:1;2164:61;2217:7;2208:6;2197:9;2193:22;2164:61;:::i;:::-;2154:71;;2110:125;2038:204;;;;:::o;2248:390::-;2328:6;2377:2;2365:9;2356:7;2352:23;2348:32;2345:2;;;2393:1;2390;2383:12;2345:2;2457:1;2446:9;2442:17;2436:24;2487:18;2479:6;2476:30;2473:2;;;2519:1;2516;2509:12;2473:2;2547:74;2613:7;2604:6;2593:9;2589:22;2547:74;:::i;:::-;2537:84;;2407:224;2335:303;;;;:::o;2644:262::-;2703:6;2752:2;2740:9;2731:7;2727:23;2723:32;2720:2;;;2768:1;2765;2758:12;2720:2;2811:1;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2782:117;2710:196;;;;:::o;2912:284::-;2982:6;3031:2;3019:9;3010:7;3006:23;3002:32;2999:2;;;3047:1;3044;3037:12;2999:2;3090:1;3115:64;3171:7;3162:6;3151:9;3147:22;3115:64;:::i;:::-;3105:74;;3061:128;2989:207;;;;:::o;3202:407::-;3270:6;3278;3327:2;3315:9;3306:7;3302:23;3298:32;3295:2;;;3343:1;3340;3333:12;3295:2;3386:1;3411:53;3456:7;3447:6;3436:9;3432:22;3411:53;:::i;:::-;3401:63;;3357:117;3513:2;3539:53;3584:7;3575:6;3564:9;3560:22;3539:53;:::i;:::-;3529:63;;3484:118;3285:324;;;;;:::o;3615:118::-;3702:24;3720:5;3702:24;:::i;:::-;3697:3;3690:37;3680:53;;:::o;3739:167::-;3844:55;3893:5;3844:55;:::i;:::-;3839:3;3832:68;3822:84;;:::o;3912:161::-;4014:52;4060:5;4014:52;:::i;:::-;4009:3;4002:65;3992:81;;:::o;4079:364::-;4167:3;4195:39;4228:5;4195:39;:::i;:::-;4250:71;4314:6;4309:3;4250:71;:::i;:::-;4243:78;;4330:52;4375:6;4370:3;4363:4;4356:5;4352:16;4330:52;:::i;:::-;4407:29;4429:6;4407:29;:::i;:::-;4402:3;4398:39;4391:46;;4171:272;;;;;:::o;4449:366::-;4591:3;4612:67;4676:2;4671:3;4612:67;:::i;:::-;4605:74;;4688:93;4777:3;4688:93;:::i;:::-;4806:2;4801:3;4797:12;4790:19;;4595:220;;;:::o;4821:366::-;4963:3;4984:67;5048:2;5043:3;4984:67;:::i;:::-;4977:74;;5060:93;5149:3;5060:93;:::i;:::-;5178:2;5173:3;5169:12;5162:19;;4967:220;;;:::o;5193:366::-;5335:3;5356:67;5420:2;5415:3;5356:67;:::i;:::-;5349:74;;5432:93;5521:3;5432:93;:::i;:::-;5550:2;5545:3;5541:12;5534:19;;5339:220;;;:::o;5565:366::-;5707:3;5728:67;5792:2;5787:3;5728:67;:::i;:::-;5721:74;;5804:93;5893:3;5804:93;:::i;:::-;5922:2;5917:3;5913:12;5906:19;;5711:220;;;:::o;5937:366::-;6079:3;6100:67;6164:2;6159:3;6100:67;:::i;:::-;6093:74;;6176:93;6265:3;6176:93;:::i;:::-;6294:2;6289:3;6285:12;6278:19;;6083:220;;;:::o;6309:366::-;6451:3;6472:67;6536:2;6531:3;6472:67;:::i;:::-;6465:74;;6548:93;6637:3;6548:93;:::i;:::-;6666:2;6661:3;6657:12;6650:19;;6455:220;;;:::o;6681:366::-;6823:3;6844:67;6908:2;6903:3;6844:67;:::i;:::-;6837:74;;6920:93;7009:3;6920:93;:::i;:::-;7038:2;7033:3;7029:12;7022:19;;6827:220;;;:::o;7053:366::-;7195:3;7216:67;7280:2;7275:3;7216:67;:::i;:::-;7209:74;;7292:93;7381:3;7292:93;:::i;:::-;7410:2;7405:3;7401:12;7394:19;;7199:220;;;:::o;7425:118::-;7512:24;7530:5;7512:24;:::i;:::-;7507:3;7500:37;7490:53;;:::o;7549:222::-;7642:4;7680:2;7669:9;7665:18;7657:26;;7693:71;7761:1;7750:9;7746:17;7737:6;7693:71;:::i;:::-;7647:124;;;;:::o;7777:332::-;7898:4;7936:2;7925:9;7921:18;7913:26;;7949:71;8017:1;8006:9;8002:17;7993:6;7949:71;:::i;:::-;8030:72;8098:2;8087:9;8083:18;8074:6;8030:72;:::i;:::-;7903:206;;;;;:::o;8115:442::-;8264:4;8302:2;8291:9;8287:18;8279:26;;8315:71;8383:1;8372:9;8368:17;8359:6;8315:71;:::i;:::-;8396:72;8464:2;8453:9;8449:18;8440:6;8396:72;:::i;:::-;8478;8546:2;8535:9;8531:18;8522:6;8478:72;:::i;:::-;8269:288;;;;;;:::o;8563:258::-;8674:4;8712:2;8701:9;8697:18;8689:26;;8725:89;8811:1;8800:9;8796:17;8787:6;8725:89;:::i;:::-;8679:142;;;;:::o;8827:252::-;8935:4;8973:2;8962:9;8958:18;8950:26;;8986:86;9069:1;9058:9;9054:17;9045:6;8986:86;:::i;:::-;8940:139;;;;:::o;9085:313::-;9198:4;9236:2;9225:9;9221:18;9213:26;;9285:9;9279:4;9275:20;9271:1;9260:9;9256:17;9249:47;9313:78;9386:4;9377:6;9313:78;:::i;:::-;9305:86;;9203:195;;;;:::o;9404:419::-;9570:4;9608:2;9597:9;9593:18;9585:26;;9657:9;9651:4;9647:20;9643:1;9632:9;9628:17;9621:47;9685:131;9811:4;9685:131;:::i;:::-;9677:139;;9575:248;;;:::o;9829:419::-;9995:4;10033:2;10022:9;10018:18;10010:26;;10082:9;10076:4;10072:20;10068:1;10057:9;10053:17;10046:47;10110:131;10236:4;10110:131;:::i;:::-;10102:139;;10000:248;;;:::o;10254:419::-;10420:4;10458:2;10447:9;10443:18;10435:26;;10507:9;10501:4;10497:20;10493:1;10482:9;10478:17;10471:47;10535:131;10661:4;10535:131;:::i;:::-;10527:139;;10425:248;;;:::o;10679:419::-;10845:4;10883:2;10872:9;10868:18;10860:26;;10932:9;10926:4;10922:20;10918:1;10907:9;10903:17;10896:47;10960:131;11086:4;10960:131;:::i;:::-;10952:139;;10850:248;;;:::o;11104:419::-;11270:4;11308:2;11297:9;11293:18;11285:26;;11357:9;11351:4;11347:20;11343:1;11332:9;11328:17;11321:47;11385:131;11511:4;11385:131;:::i;:::-;11377:139;;11275:248;;;:::o;11529:419::-;11695:4;11733:2;11722:9;11718:18;11710:26;;11782:9;11776:4;11772:20;11768:1;11757:9;11753:17;11746:47;11810:131;11936:4;11810:131;:::i;:::-;11802:139;;11700:248;;;:::o;11954:419::-;12120:4;12158:2;12147:9;12143:18;12135:26;;12207:9;12201:4;12197:20;12193:1;12182:9;12178:17;12171:47;12235:131;12361:4;12235:131;:::i;:::-;12227:139;;12125:248;;;:::o;12379:419::-;12545:4;12583:2;12572:9;12568:18;12560:26;;12632:9;12626:4;12622:20;12618:1;12607:9;12603:17;12596:47;12660:131;12786:4;12660:131;:::i;:::-;12652:139;;12550:248;;;:::o;12804:222::-;12897:4;12935:2;12924:9;12920:18;12912:26;;12948:71;13016:1;13005:9;13001:17;12992:6;12948:71;:::i;:::-;12902:124;;;;:::o;13032:332::-;13153:4;13191:2;13180:9;13176:18;13168:26;;13204:71;13272:1;13261:9;13257:17;13248:6;13204:71;:::i;:::-;13285:72;13353:2;13342:9;13338:18;13329:6;13285:72;:::i;:::-;13158:206;;;;;:::o;13370:442::-;13519:4;13557:2;13546:9;13542:18;13534:26;;13570:71;13638:1;13627:9;13623:17;13614:6;13570:71;:::i;:::-;13651:72;13719:2;13708:9;13704:18;13695:6;13651:72;:::i;:::-;13733;13801:2;13790:9;13786:18;13777:6;13733:72;:::i;:::-;13524:288;;;;;;:::o;13818:129::-;13852:6;13879:20;;:::i;:::-;13869:30;;13908:33;13936:4;13928:6;13908:33;:::i;:::-;13859:88;;;:::o;13953:75::-;13986:6;14019:2;14013:9;14003:19;;13993:35;:::o;14034:308::-;14096:4;14186:18;14178:6;14175:30;14172:2;;;14208:18;;:::i;:::-;14172:2;14246:29;14268:6;14246:29;:::i;:::-;14238:37;;14330:4;14324;14320:15;14312:23;;14101:241;;;:::o;14348:99::-;14400:6;14434:5;14428:12;14418:22;;14407:40;;;:::o;14453:169::-;14537:11;14571:6;14566:3;14559:19;14611:4;14606:3;14602:14;14587:29;;14549:73;;;;:::o;14628:96::-;14665:7;14694:24;14712:5;14694:24;:::i;:::-;14683:35;;14673:51;;;:::o;14730:90::-;14764:7;14807:5;14800:13;14793:21;14782:32;;14772:48;;;:::o;14826:126::-;14863:7;14903:42;14896:5;14892:54;14881:65;;14871:81;;;:::o;14958:77::-;14995:7;15024:5;15013:16;;15003:32;;;:::o;15041:162::-;15109:9;15142:55;15191:5;15142:55;:::i;:::-;15129:68;;15119:84;;;:::o;15209:131::-;15277:9;15310:24;15328:5;15310:24;:::i;:::-;15297:37;;15287:53;;;:::o;15346:156::-;15411:9;15444:52;15490:5;15444:52;:::i;:::-;15431:65;;15421:81;;;:::o;15508:128::-;15573:9;15606:24;15624:5;15606:24;:::i;:::-;15593:37;;15583:53;;;:::o;15642:307::-;15710:1;15720:113;15734:6;15731:1;15728:13;15720:113;;;15819:1;15814:3;15810:11;15804:18;15800:1;15795:3;15791:11;15784:39;15756:2;15753:1;15749:10;15744:15;;15720:113;;;15851:6;15848:1;15845:13;15842:2;;;15931:1;15922:6;15917:3;15913:16;15906:27;15842:2;15691:258;;;;:::o;15955:320::-;15999:6;16036:1;16030:4;16026:12;16016:22;;16083:1;16077:4;16073:12;16104:18;16094:2;;16160:4;16152:6;16148:17;16138:27;;16094:2;16222;16214:6;16211:14;16191:18;16188:38;16185:2;;;16241:18;;:::i;:::-;16185:2;16006:269;;;;:::o;16281:281::-;16364:27;16386:4;16364:27;:::i;:::-;16356:6;16352:40;16494:6;16482:10;16479:22;16458:18;16446:10;16443:34;16440:62;16437:2;;;16505:18;;:::i;:::-;16437:2;16545:10;16541:2;16534:22;16324:238;;;:::o;16568:180::-;16616:77;16613:1;16606:88;16713:4;16710:1;16703:15;16737:4;16734:1;16727:15;16754:180;16802:77;16799:1;16792:88;16899:4;16896:1;16889:15;16923:4;16920:1;16913:15;16940:102;16981:6;17032:2;17028:7;17023:2;17016:5;17012:14;17008:28;16998:38;;16988:54;;;:::o;17048:248::-;17188:34;17184:1;17176:6;17172:14;17165:58;17257:31;17252:2;17244:6;17240:15;17233:56;17154:142;:::o;17302:246::-;17442:34;17438:1;17430:6;17426:14;17419:58;17511:29;17506:2;17498:6;17494:15;17487:54;17408:140;:::o;17554:235::-;17694:34;17690:1;17682:6;17678:14;17671:58;17763:18;17758:2;17750:6;17746:15;17739:43;17660:129;:::o;17795:237::-;17935:34;17931:1;17923:6;17919:14;17912:58;18004:20;17999:2;17991:6;17987:15;17980:45;17901:131;:::o;18038:297::-;18178:34;18174:1;18166:6;18162:14;18155:58;18247:34;18242:2;18234:6;18230:15;18223:59;18316:11;18311:2;18303:6;18299:15;18292:36;18144:191;:::o;18341:224::-;18481:34;18477:1;18469:6;18465:14;18458:58;18550:7;18545:2;18537:6;18533:15;18526:32;18447:118;:::o;18571:231::-;18711:34;18707:1;18699:6;18695:14;18688:58;18780:14;18775:2;18767:6;18763:15;18756:39;18677:125;:::o;18808:232::-;18948:34;18944:1;18936:6;18932:14;18925:58;19017:15;19012:2;19004:6;19000:15;18993:40;18914:126;:::o;19046:122::-;19119:24;19137:5;19119:24;:::i;:::-;19112:5;19109:35;19099:2;;19158:1;19155;19148:12;19099:2;19089:79;:::o;19174:116::-;19244:21;19259:5;19244:21;:::i;:::-;19237:5;19234:32;19224:2;;19280:1;19277;19270:12;19224:2;19214:76;:::o;19296:122::-;19369:24;19387:5;19369:24;:::i;:::-;19362:5;19359:35;19349:2;;19408:1;19405;19398:12;19349:2;19339:79;:::o",
  "source": "/**\n    ***********************************************************\n    * Copyright (c) Avara Dev. 2021. (Telegram: @avara_cc)  *\n    ***********************************************************\n\n     ▄▄▄·  ▌ ▐· ▄▄▄· ▄▄▄   ▄▄▄·\n    ▐█ ▀█ ▪█·█▌▐█ ▀█ ▀▄ █·▐█ ▀█\n    ▄█▀▀█ ▐█▐█•▄█▀▀█ ▐▀▀▄ ▄█▀▀█\n    ▐█ ▪▐▌ ███ ▐█ ▪▐▌▐█•█▌▐█ ▪▐▌\n     ▀  ▀ . ▀   ▀  ▀ .▀  ▀ ▀  ▀  - Binance Smart Chain\n\n    Avara - Always Vivid, Always Rising Above\n    https://avara.cc/\n    https://github.com/avara-cc\n    https://github.com/avara-cc/Avara/wiki\n*/\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity 0.8.4;\n\nimport \"./abstract/AvaraModule.sol\";\nimport \"./library/SafeMath.sol\";\nimport \"./NFT/IAvaraNft.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract OwnershipModule is AvaraModule {\n    IAvaraNft public AvaraNFT;\n    IERC20 public Avara;\n    struct SellNft {\n        uint256 price;\n        address seller;\n    }\n    mapping(uint256 => SellNft) sellNftList;\n    event SellingNft(uint256 nftId, uint256 price, address seller);\n    event BuyingNft(uint256 nftId, address buyer);\n\n    constructor(address cOwner, address baseContract, address avaraNftContract) AvaraModule(cOwner, baseContract, \"Ownership\", \"0.0.1\") {\n        AvaraNFT = IAvaraNft(avaraNftContract);\n        Avara = IERC20(baseContract);\n    }\n\n    function selling(uint256 nftId, uint256 price_) public {\n        require(AvaraNFT.exists(nftId), \"Marketplace.sellingNFT: NftId does not exist\");\n        require(AvaraNFT.ownerOf(nftId) == _msgSender(), \"Marketplace.sellingNFT: Sender has to be the owner of token\");\n        sellNftList[nftId] = SellNft({\n            price: price_,\n            seller: _msgSender()\n        });\n\n        emit SellingNft(nftId, price_, _msgSender());\n    }\n    function buying(uint256 nftId) public {\n        require(AvaraNFT.exists(nftId), \"OwnershipModule.buying: NftId does not exist.\");\n        require(sellNftList[nftId].price != 0, \"OwnershipModule.buying: Token is not in sale list.\");\n        require(AvaraNFT.ownerOf(nftId) != _msgSender(), \"OwnershipModule.buying: Owner of nft can not buy his own nft.\");\n        SellNft storage sell = sellNftList[nftId];\n        require(Avara.allowance(_msgSender(), address(this)) >=  sell.price, \"OwnershipModule.buying: ERC20 token allowance is less than selling price.\");\n        Avara.transferFrom(_msgSender(), sell.seller, sell.price);\n\n        AvaraNFT.safeTransferFrom(AvaraNFT.ownerOf(nftId), _msgSender(), nftId);\n        sellNftList[nftId].price = 0;\n        sellNftList[nftId].seller = _msgSender();\n        emit BuyingNft(nftId, _msgSender());\n    }\n    /**\n    * @dev Occasionally called (only) by the server to make sure that the connection with the module and main contract is granted.\n    */\n    function ping() external view onlyOwner returns (string memory) {\n        return getBaseContract().ping();\n    }\n}",
  "sourcePath": "/home/oncemore/Blockchain/avara-test/contract/contracts/OwnershipModule.sol",
  "ast": {
    "absolutePath": "/home/oncemore/Blockchain/avara-test/contract/contracts/OwnershipModule.sol",
    "exportedSymbols": {
      "Avara": [
        2585
      ],
      "AvaraModule": [
        3046
      ],
      "Context": [
        3072
      ],
      "IAvaraNft": [
        2736
      ],
      "IBEP20": [
        3291
      ],
      "IERC165": [
        5936
      ],
      "IERC20": [
        4386
      ],
      "IERC721": [
        5333
      ],
      "IPancakeFactory": [
        3355
      ],
      "IPancakePair": [
        3598
      ],
      "IPancakeRouter01": [
        3907
      ],
      "IPancakeRouter02": [
        3996
      ],
      "Ownable": [
        3189
      ],
      "OwnershipModule": [
        2963
      ],
      "SafeMath": [
        4308
      ]
    },
    "id": 2964,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2738,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "758:22:3"
      },
      {
        "absolutePath": "/home/oncemore/Blockchain/avara-test/contract/contracts/abstract/AvaraModule.sol",
        "file": "./abstract/AvaraModule.sol",
        "id": 2739,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 3047,
        "src": "782:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/oncemore/Blockchain/avara-test/contract/contracts/library/SafeMath.sol",
        "file": "./library/SafeMath.sol",
        "id": 2740,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 4309,
        "src": "819:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/oncemore/Blockchain/avara-test/contract/contracts/NFT/IAvaraNft.sol",
        "file": "./NFT/IAvaraNft.sol",
        "id": 2741,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 2737,
        "src": "852:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2742,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 4387,
        "src": "882:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2743,
              "name": "AvaraModule",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3046,
              "src": "968:11:3"
            },
            "id": 2744,
            "nodeType": "InheritanceSpecifier",
            "src": "968:11:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2963,
        "linearizedBaseContracts": [
          2963,
          3046,
          3189,
          3072
        ],
        "name": "OwnershipModule",
        "nameLocation": "949:15:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "13b2a691",
            "id": 2747,
            "mutability": "mutable",
            "name": "AvaraNFT",
            "nameLocation": "1003:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 2963,
            "src": "986:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAvaraNft_$2736",
              "typeString": "contract IAvaraNft"
            },
            "typeName": {
              "id": 2746,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2745,
                "name": "IAvaraNft",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2736,
                "src": "986:9:3"
              },
              "referencedDeclaration": 2736,
              "src": "986:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                "typeString": "contract IAvaraNft"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1032dd60",
            "id": 2750,
            "mutability": "mutable",
            "name": "Avara",
            "nameLocation": "1031:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 2963,
            "src": "1017:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4386",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2749,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2748,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4386,
                "src": "1017:6:3"
              },
              "referencedDeclaration": 4386,
              "src": "1017:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4386",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "OwnershipModule.SellNft",
            "id": 2755,
            "members": [
              {
                "constant": false,
                "id": 2752,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1075:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 2755,
                "src": "1067:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2751,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1067:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2754,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "1098:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 2755,
                "src": "1090:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2753,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1090:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SellNft",
            "nameLocation": "1049:7:3",
            "nodeType": "StructDefinition",
            "scope": 2963,
            "src": "1042:69:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2760,
            "mutability": "mutable",
            "name": "sellNftList",
            "nameLocation": "1144:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 2963,
            "src": "1116:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
              "typeString": "mapping(uint256 => struct OwnershipModule.SellNft)"
            },
            "typeName": {
              "id": 2759,
              "keyType": {
                "id": 2756,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1124:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1116:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
                "typeString": "mapping(uint256 => struct OwnershipModule.SellNft)"
              },
              "valueType": {
                "id": 2758,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2757,
                  "name": "SellNft",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2755,
                  "src": "1135:7:3"
                },
                "referencedDeclaration": 2755,
                "src": "1135:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SellNft_$2755_storage_ptr",
                  "typeString": "struct OwnershipModule.SellNft"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 2768,
            "name": "SellingNft",
            "nameLocation": "1167:10:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2762,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1186:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "1178:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1178:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2764,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1201:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "1193:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2766,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1216:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "1208:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1177:46:3"
            },
            "src": "1161:63:3"
          },
          {
            "anonymous": false,
            "id": 2774,
            "name": "BuyingNft",
            "nameLocation": "1235:9:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2770,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1253:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2774,
                  "src": "1245:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2772,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1268:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2774,
                  "src": "1260:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:30:3"
            },
            "src": "1229:46:3"
          },
          {
            "body": {
              "id": 2801,
              "nodeType": "Block",
              "src": "1413:93:3",
              "statements": [
                {
                  "expression": {
                    "id": 2793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2789,
                      "name": "AvaraNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2747,
                      "src": "1423:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                        "typeString": "contract IAvaraNft"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2791,
                          "name": "avaraNftContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2780,
                          "src": "1444:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2790,
                        "name": "IAvaraNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2736,
                        "src": "1434:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAvaraNft_$2736_$",
                          "typeString": "type(contract IAvaraNft)"
                        }
                      },
                      "id": 2792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1434:27:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                        "typeString": "contract IAvaraNft"
                      }
                    },
                    "src": "1423:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                      "typeString": "contract IAvaraNft"
                    }
                  },
                  "id": 2794,
                  "nodeType": "ExpressionStatement",
                  "src": "1423:38:3"
                },
                {
                  "expression": {
                    "id": 2799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2795,
                      "name": "Avara",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2750,
                      "src": "1471:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4386",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2797,
                          "name": "baseContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2778,
                          "src": "1486:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2796,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4386,
                        "src": "1479:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4386_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1479:20:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4386",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1471:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4386",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2800,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:28:3"
                }
              ]
            },
            "id": 2802,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2783,
                    "name": "cOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2776,
                    "src": "1369:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2784,
                    "name": "baseContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2778,
                    "src": "1377:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "4f776e657273686970",
                    "id": 2785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1391:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_28c1b16c4caaf7563d3646b26aa470becc925edd3f4002f276e5a958b060fe07",
                      "typeString": "literal_string \"Ownership\""
                    },
                    "value": "Ownership"
                  },
                  {
                    "hexValue": "302e302e31",
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1404:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                      "typeString": "literal_string \"0.0.1\""
                    },
                    "value": "0.0.1"
                  }
                ],
                "id": 2787,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2782,
                  "name": "AvaraModule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3046,
                  "src": "1357:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1357:55:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2776,
                  "mutability": "mutable",
                  "name": "cOwner",
                  "nameLocation": "1301:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2802,
                  "src": "1293:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2778,
                  "mutability": "mutable",
                  "name": "baseContract",
                  "nameLocation": "1317:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2802,
                  "src": "1309:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1309:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2780,
                  "mutability": "mutable",
                  "name": "avaraNftContract",
                  "nameLocation": "1339:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2802,
                  "src": "1331:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1292:64:3"
            },
            "returnParameters": {
              "id": 2788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1413:0:3"
            },
            "scope": 2963,
            "src": "1281:225:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2845,
              "nodeType": "Block",
              "src": "1567:383:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2812,
                            "name": "nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2804,
                            "src": "1601:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2810,
                            "name": "AvaraNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2747,
                            "src": "1585:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                              "typeString": "contract IAvaraNft"
                            }
                          },
                          "id": 2811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2735,
                          "src": "1585:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 2813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1585:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574706c6163652e73656c6c696e674e46543a204e6674496420646f6573206e6f74206578697374",
                        "id": 2814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1609:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e",
                          "typeString": "literal_string \"Marketplace.sellingNFT: NftId does not exist\""
                        },
                        "value": "Marketplace.sellingNFT: NftId does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e",
                          "typeString": "literal_string \"Marketplace.sellingNFT: NftId does not exist\""
                        }
                      ],
                      "id": 2809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1577:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1577:79:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2816,
                  "nodeType": "ExpressionStatement",
                  "src": "1577:79:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2820,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2804,
                              "src": "1691:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2818,
                              "name": "AvaraNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2747,
                              "src": "1674:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                                "typeString": "contract IAvaraNft"
                              }
                            },
                            "id": 2819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5266,
                            "src": "1674:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 2821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1674:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2822,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3059,
                            "src": "1701:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1701:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1674:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574706c6163652e73656c6c696e674e46543a2053656e6465722068617320746f20626520746865206f776e6572206f6620746f6b656e",
                        "id": 2825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1715:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9",
                          "typeString": "literal_string \"Marketplace.sellingNFT: Sender has to be the owner of token\""
                        },
                        "value": "Marketplace.sellingNFT: Sender has to be the owner of token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9",
                          "typeString": "literal_string \"Marketplace.sellingNFT: Sender has to be the owner of token\""
                        }
                      ],
                      "id": 2817,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1666:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1666:111:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2827,
                  "nodeType": "ExpressionStatement",
                  "src": "1666:111:3"
                },
                {
                  "expression": {
                    "id": 2836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2828,
                        "name": "sellNftList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2760,
                        "src": "1787:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
                          "typeString": "mapping(uint256 => struct OwnershipModule.SellNft storage ref)"
                        }
                      },
                      "id": 2830,
                      "indexExpression": {
                        "id": 2829,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2804,
                        "src": "1799:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1787:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SellNft_$2755_storage",
                        "typeString": "struct OwnershipModule.SellNft storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2832,
                          "name": "price_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2806,
                          "src": "1837:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2833,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3059,
                            "src": "1865:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1865:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2831,
                        "name": "SellNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2755,
                        "src": "1808:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SellNft_$2755_storage_ptr_$",
                          "typeString": "type(struct OwnershipModule.SellNft storage pointer)"
                        }
                      },
                      "id": 2835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "price",
                        "seller"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1808:80:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SellNft_$2755_memory_ptr",
                        "typeString": "struct OwnershipModule.SellNft memory"
                      }
                    },
                    "src": "1787:101:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SellNft_$2755_storage",
                      "typeString": "struct OwnershipModule.SellNft storage ref"
                    }
                  },
                  "id": 2837,
                  "nodeType": "ExpressionStatement",
                  "src": "1787:101:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2839,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2804,
                        "src": "1915:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2840,
                        "name": "price_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2806,
                        "src": "1922:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2841,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3059,
                          "src": "1930:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1930:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2838,
                      "name": "SellingNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2768,
                      "src": "1904:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 2843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1904:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2844,
                  "nodeType": "EmitStatement",
                  "src": "1899:44:3"
                }
              ]
            },
            "functionSelector": "726bddfd",
            "id": 2846,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selling",
            "nameLocation": "1521:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2804,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1537:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "1529:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2806,
                  "mutability": "mutable",
                  "name": "price_",
                  "nameLocation": "1552:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "1544:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:31:3"
            },
            "returnParameters": {
              "id": 2808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1567:0:3"
            },
            "scope": 2963,
            "src": "1512:438:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2947,
              "nodeType": "Block",
              "src": "1993:810:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2854,
                            "name": "nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2848,
                            "src": "2027:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2852,
                            "name": "AvaraNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2747,
                            "src": "2011:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                              "typeString": "contract IAvaraNft"
                            }
                          },
                          "id": 2853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2735,
                          "src": "2011:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 2855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2011:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572736869704d6f64756c652e627579696e673a204e6674496420646f6573206e6f742065786973742e",
                        "id": 2856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2035:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6",
                          "typeString": "literal_string \"OwnershipModule.buying: NftId does not exist.\""
                        },
                        "value": "OwnershipModule.buying: NftId does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6",
                          "typeString": "literal_string \"OwnershipModule.buying: NftId does not exist.\""
                        }
                      ],
                      "id": 2851,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2003:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2003:80:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2858,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:80:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2860,
                              "name": "sellNftList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2760,
                              "src": "2101:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
                                "typeString": "mapping(uint256 => struct OwnershipModule.SellNft storage ref)"
                              }
                            },
                            "id": 2862,
                            "indexExpression": {
                              "id": 2861,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2848,
                              "src": "2113:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2101:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SellNft_$2755_storage",
                              "typeString": "struct OwnershipModule.SellNft storage ref"
                            }
                          },
                          "id": 2863,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2752,
                          "src": "2101:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2129:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2101:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572736869704d6f64756c652e627579696e673a20546f6b656e206973206e6f7420696e2073616c65206c6973742e",
                        "id": 2866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2132:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50",
                          "typeString": "literal_string \"OwnershipModule.buying: Token is not in sale list.\""
                        },
                        "value": "OwnershipModule.buying: Token is not in sale list."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50",
                          "typeString": "literal_string \"OwnershipModule.buying: Token is not in sale list.\""
                        }
                      ],
                      "id": 2859,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2093:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2093:92:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2868,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:92:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2872,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2848,
                              "src": "2220:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2870,
                              "name": "AvaraNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2747,
                              "src": "2203:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                                "typeString": "contract IAvaraNft"
                              }
                            },
                            "id": 2871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5266,
                            "src": "2203:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 2873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2203:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2874,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3059,
                            "src": "2230:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2230:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2203:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572736869704d6f64756c652e627579696e673a204f776e6572206f66206e66742063616e206e6f742062757920686973206f776e206e66742e",
                        "id": 2877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2244:63:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101",
                          "typeString": "literal_string \"OwnershipModule.buying: Owner of nft can not buy his own nft.\""
                        },
                        "value": "OwnershipModule.buying: Owner of nft can not buy his own nft."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101",
                          "typeString": "literal_string \"OwnershipModule.buying: Owner of nft can not buy his own nft.\""
                        }
                      ],
                      "id": 2869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2195:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:113:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2879,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:113:3"
                },
                {
                  "assignments": [
                    2882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2882,
                      "mutability": "mutable",
                      "name": "sell",
                      "nameLocation": "2334:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2947,
                      "src": "2318:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SellNft_$2755_storage_ptr",
                        "typeString": "struct OwnershipModule.SellNft"
                      },
                      "typeName": {
                        "id": 2881,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2880,
                          "name": "SellNft",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2755,
                          "src": "2318:7:3"
                        },
                        "referencedDeclaration": 2755,
                        "src": "2318:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellNft_$2755_storage_ptr",
                          "typeString": "struct OwnershipModule.SellNft"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2886,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2883,
                      "name": "sellNftList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2760,
                      "src": "2341:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
                        "typeString": "mapping(uint256 => struct OwnershipModule.SellNft storage ref)"
                      }
                    },
                    "id": 2885,
                    "indexExpression": {
                      "id": 2884,
                      "name": "nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2848,
                      "src": "2353:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2341:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SellNft_$2755_storage",
                      "typeString": "struct OwnershipModule.SellNft storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2318:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2890,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3059,
                                "src": "2393:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2393:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2894,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2415:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OwnershipModule_$2963",
                                    "typeString": "contract OwnershipModule"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OwnershipModule_$2963",
                                    "typeString": "contract OwnershipModule"
                                  }
                                ],
                                "id": 2893,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2407:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2892,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2407:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2407:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2888,
                              "name": "Avara",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2750,
                              "src": "2377:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4386",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4345,
                            "src": "2377:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2377:44:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 2897,
                            "name": "sell",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2882,
                            "src": "2426:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SellNft_$2755_storage_ptr",
                              "typeString": "struct OwnershipModule.SellNft storage pointer"
                            }
                          },
                          "id": 2898,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2752,
                          "src": "2426:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2377:59:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572736869704d6f64756c652e627579696e673a20455243323020746f6b656e20616c6c6f77616e6365206973206c657373207468616e2073656c6c696e672070726963652e",
                        "id": 2900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2438:75:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67",
                          "typeString": "literal_string \"OwnershipModule.buying: ERC20 token allowance is less than selling price.\""
                        },
                        "value": "OwnershipModule.buying: ERC20 token allowance is less than selling price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67",
                          "typeString": "literal_string \"OwnershipModule.buying: ERC20 token allowance is less than selling price.\""
                        }
                      ],
                      "id": 2887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2369:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2369:145:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2902,
                  "nodeType": "ExpressionStatement",
                  "src": "2369:145:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2906,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3059,
                          "src": "2543:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2543:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2908,
                          "name": "sell",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2882,
                          "src": "2557:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SellNft_$2755_storage_ptr",
                            "typeString": "struct OwnershipModule.SellNft storage pointer"
                          }
                        },
                        "id": 2909,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2754,
                        "src": "2557:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2910,
                          "name": "sell",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2882,
                          "src": "2570:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SellNft_$2755_storage_ptr",
                            "typeString": "struct OwnershipModule.SellNft storage pointer"
                          }
                        },
                        "id": 2911,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2752,
                        "src": "2570:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2903,
                        "name": "Avara",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2750,
                        "src": "2524:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4386",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4367,
                      "src": "2524:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2524:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2913,
                  "nodeType": "ExpressionStatement",
                  "src": "2524:57:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2919,
                            "name": "nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2848,
                            "src": "2635:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2917,
                            "name": "AvaraNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2747,
                            "src": "2618:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                              "typeString": "contract IAvaraNft"
                            }
                          },
                          "id": 2918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5266,
                          "src": "2618:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 2920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2618:23:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2921,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3059,
                          "src": "2643:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2643:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2923,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2848,
                        "src": "2657:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2914,
                        "name": "AvaraNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2747,
                        "src": "2592:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                          "typeString": "contract IAvaraNft"
                        }
                      },
                      "id": 2916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5276,
                      "src": "2592:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2592:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2925,
                  "nodeType": "ExpressionStatement",
                  "src": "2592:71:3"
                },
                {
                  "expression": {
                    "id": 2931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2926,
                          "name": "sellNftList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2760,
                          "src": "2673:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
                            "typeString": "mapping(uint256 => struct OwnershipModule.SellNft storage ref)"
                          }
                        },
                        "id": 2928,
                        "indexExpression": {
                          "id": 2927,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2848,
                          "src": "2685:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2673:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellNft_$2755_storage",
                          "typeString": "struct OwnershipModule.SellNft storage ref"
                        }
                      },
                      "id": 2929,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2752,
                      "src": "2673:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2700:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2673:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2932,
                  "nodeType": "ExpressionStatement",
                  "src": "2673:28:3"
                },
                {
                  "expression": {
                    "id": 2939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2933,
                          "name": "sellNftList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2760,
                          "src": "2711:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
                            "typeString": "mapping(uint256 => struct OwnershipModule.SellNft storage ref)"
                          }
                        },
                        "id": 2935,
                        "indexExpression": {
                          "id": 2934,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2848,
                          "src": "2723:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2711:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellNft_$2755_storage",
                          "typeString": "struct OwnershipModule.SellNft storage ref"
                        }
                      },
                      "id": 2936,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2754,
                      "src": "2711:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2937,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3059,
                        "src": "2739:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2739:12:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2711:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2940,
                  "nodeType": "ExpressionStatement",
                  "src": "2711:40:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2942,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2848,
                        "src": "2776:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2943,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3059,
                          "src": "2783:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2783:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2941,
                      "name": "BuyingNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2774,
                      "src": "2766:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 2945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2766:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2946,
                  "nodeType": "EmitStatement",
                  "src": "2761:35:3"
                }
              ]
            },
            "functionSelector": "c99bf814",
            "id": 2948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buying",
            "nameLocation": "1964:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2848,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1979:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2948,
                  "src": "1971:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1970:15:3"
            },
            "returnParameters": {
              "id": 2850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1993:0:3"
            },
            "scope": 2963,
            "src": "1955:848:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2961,
              "nodeType": "Block",
              "src": "3018:48:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2956,
                          "name": "getBaseContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3045,
                          "src": "3035:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_Avara_$2585_$",
                            "typeString": "function () view returns (contract Avara)"
                          }
                        },
                        "id": 2957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3035:17:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avara_$2585",
                          "typeString": "contract Avara"
                        }
                      },
                      "id": 2958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ping",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 609,
                      "src": "3035:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 2959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3035:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2955,
                  "id": 2960,
                  "nodeType": "Return",
                  "src": "3028:31:3"
                }
              ]
            },
            "documentation": {
              "id": 2949,
              "nodeType": "StructuredDocumentation",
              "src": "2808:141:3",
              "text": " @dev Occasionally called (only) by the server to make sure that the connection with the module and main contract is granted."
            },
            "functionSelector": "5c36b186",
            "id": 2962,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2952,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2951,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3131,
                  "src": "2984:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2984:9:3"
              }
            ],
            "name": "ping",
            "nameLocation": "2963:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2967:2:3"
            },
            "returnParameters": {
              "id": 2955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2954,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2962,
                  "src": "3003:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2953,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3003:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3002:15:3"
            },
            "scope": 2963,
            "src": "2954:112:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2964,
        "src": "940:2128:3",
        "usedErrors": []
      }
    ],
    "src": "758:2310:3"
  },
  "legacyAST": {
    "absolutePath": "/home/oncemore/Blockchain/avara-test/contract/contracts/OwnershipModule.sol",
    "exportedSymbols": {
      "Avara": [
        2585
      ],
      "AvaraModule": [
        3046
      ],
      "Context": [
        3072
      ],
      "IAvaraNft": [
        2736
      ],
      "IBEP20": [
        3291
      ],
      "IERC165": [
        5936
      ],
      "IERC20": [
        4386
      ],
      "IERC721": [
        5333
      ],
      "IPancakeFactory": [
        3355
      ],
      "IPancakePair": [
        3598
      ],
      "IPancakeRouter01": [
        3907
      ],
      "IPancakeRouter02": [
        3996
      ],
      "Ownable": [
        3189
      ],
      "OwnershipModule": [
        2963
      ],
      "SafeMath": [
        4308
      ]
    },
    "id": 2964,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2738,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "758:22:3"
      },
      {
        "absolutePath": "/home/oncemore/Blockchain/avara-test/contract/contracts/abstract/AvaraModule.sol",
        "file": "./abstract/AvaraModule.sol",
        "id": 2739,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 3047,
        "src": "782:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/oncemore/Blockchain/avara-test/contract/contracts/library/SafeMath.sol",
        "file": "./library/SafeMath.sol",
        "id": 2740,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 4309,
        "src": "819:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/oncemore/Blockchain/avara-test/contract/contracts/NFT/IAvaraNft.sol",
        "file": "./NFT/IAvaraNft.sol",
        "id": 2741,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 2737,
        "src": "852:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2742,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 4387,
        "src": "882:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2743,
              "name": "AvaraModule",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3046,
              "src": "968:11:3"
            },
            "id": 2744,
            "nodeType": "InheritanceSpecifier",
            "src": "968:11:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2963,
        "linearizedBaseContracts": [
          2963,
          3046,
          3189,
          3072
        ],
        "name": "OwnershipModule",
        "nameLocation": "949:15:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "13b2a691",
            "id": 2747,
            "mutability": "mutable",
            "name": "AvaraNFT",
            "nameLocation": "1003:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 2963,
            "src": "986:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAvaraNft_$2736",
              "typeString": "contract IAvaraNft"
            },
            "typeName": {
              "id": 2746,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2745,
                "name": "IAvaraNft",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2736,
                "src": "986:9:3"
              },
              "referencedDeclaration": 2736,
              "src": "986:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                "typeString": "contract IAvaraNft"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1032dd60",
            "id": 2750,
            "mutability": "mutable",
            "name": "Avara",
            "nameLocation": "1031:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 2963,
            "src": "1017:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4386",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2749,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2748,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4386,
                "src": "1017:6:3"
              },
              "referencedDeclaration": 4386,
              "src": "1017:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4386",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "OwnershipModule.SellNft",
            "id": 2755,
            "members": [
              {
                "constant": false,
                "id": 2752,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1075:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 2755,
                "src": "1067:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2751,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1067:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2754,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "1098:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 2755,
                "src": "1090:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2753,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1090:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SellNft",
            "nameLocation": "1049:7:3",
            "nodeType": "StructDefinition",
            "scope": 2963,
            "src": "1042:69:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2760,
            "mutability": "mutable",
            "name": "sellNftList",
            "nameLocation": "1144:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 2963,
            "src": "1116:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
              "typeString": "mapping(uint256 => struct OwnershipModule.SellNft)"
            },
            "typeName": {
              "id": 2759,
              "keyType": {
                "id": 2756,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1124:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1116:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
                "typeString": "mapping(uint256 => struct OwnershipModule.SellNft)"
              },
              "valueType": {
                "id": 2758,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2757,
                  "name": "SellNft",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2755,
                  "src": "1135:7:3"
                },
                "referencedDeclaration": 2755,
                "src": "1135:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SellNft_$2755_storage_ptr",
                  "typeString": "struct OwnershipModule.SellNft"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 2768,
            "name": "SellingNft",
            "nameLocation": "1167:10:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2762,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1186:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "1178:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1178:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2764,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1201:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "1193:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2766,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1216:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "1208:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1177:46:3"
            },
            "src": "1161:63:3"
          },
          {
            "anonymous": false,
            "id": 2774,
            "name": "BuyingNft",
            "nameLocation": "1235:9:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2770,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1253:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2774,
                  "src": "1245:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2772,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1268:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2774,
                  "src": "1260:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:30:3"
            },
            "src": "1229:46:3"
          },
          {
            "body": {
              "id": 2801,
              "nodeType": "Block",
              "src": "1413:93:3",
              "statements": [
                {
                  "expression": {
                    "id": 2793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2789,
                      "name": "AvaraNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2747,
                      "src": "1423:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                        "typeString": "contract IAvaraNft"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2791,
                          "name": "avaraNftContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2780,
                          "src": "1444:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2790,
                        "name": "IAvaraNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2736,
                        "src": "1434:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAvaraNft_$2736_$",
                          "typeString": "type(contract IAvaraNft)"
                        }
                      },
                      "id": 2792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1434:27:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                        "typeString": "contract IAvaraNft"
                      }
                    },
                    "src": "1423:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                      "typeString": "contract IAvaraNft"
                    }
                  },
                  "id": 2794,
                  "nodeType": "ExpressionStatement",
                  "src": "1423:38:3"
                },
                {
                  "expression": {
                    "id": 2799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2795,
                      "name": "Avara",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2750,
                      "src": "1471:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4386",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2797,
                          "name": "baseContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2778,
                          "src": "1486:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2796,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4386,
                        "src": "1479:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4386_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1479:20:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4386",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1471:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4386",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2800,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:28:3"
                }
              ]
            },
            "id": 2802,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2783,
                    "name": "cOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2776,
                    "src": "1369:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2784,
                    "name": "baseContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2778,
                    "src": "1377:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "4f776e657273686970",
                    "id": 2785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1391:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_28c1b16c4caaf7563d3646b26aa470becc925edd3f4002f276e5a958b060fe07",
                      "typeString": "literal_string \"Ownership\""
                    },
                    "value": "Ownership"
                  },
                  {
                    "hexValue": "302e302e31",
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1404:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                      "typeString": "literal_string \"0.0.1\""
                    },
                    "value": "0.0.1"
                  }
                ],
                "id": 2787,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2782,
                  "name": "AvaraModule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3046,
                  "src": "1357:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1357:55:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2776,
                  "mutability": "mutable",
                  "name": "cOwner",
                  "nameLocation": "1301:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2802,
                  "src": "1293:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2778,
                  "mutability": "mutable",
                  "name": "baseContract",
                  "nameLocation": "1317:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2802,
                  "src": "1309:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1309:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2780,
                  "mutability": "mutable",
                  "name": "avaraNftContract",
                  "nameLocation": "1339:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2802,
                  "src": "1331:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1292:64:3"
            },
            "returnParameters": {
              "id": 2788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1413:0:3"
            },
            "scope": 2963,
            "src": "1281:225:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2845,
              "nodeType": "Block",
              "src": "1567:383:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2812,
                            "name": "nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2804,
                            "src": "1601:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2810,
                            "name": "AvaraNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2747,
                            "src": "1585:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                              "typeString": "contract IAvaraNft"
                            }
                          },
                          "id": 2811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2735,
                          "src": "1585:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 2813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1585:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574706c6163652e73656c6c696e674e46543a204e6674496420646f6573206e6f74206578697374",
                        "id": 2814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1609:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e",
                          "typeString": "literal_string \"Marketplace.sellingNFT: NftId does not exist\""
                        },
                        "value": "Marketplace.sellingNFT: NftId does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bad09b48b7146c59cc201ead6be6cddb299e572ab975c2e6d1bc8b3ea57faf0e",
                          "typeString": "literal_string \"Marketplace.sellingNFT: NftId does not exist\""
                        }
                      ],
                      "id": 2809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1577:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1577:79:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2816,
                  "nodeType": "ExpressionStatement",
                  "src": "1577:79:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2820,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2804,
                              "src": "1691:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2818,
                              "name": "AvaraNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2747,
                              "src": "1674:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                                "typeString": "contract IAvaraNft"
                              }
                            },
                            "id": 2819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5266,
                            "src": "1674:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 2821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1674:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2822,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3059,
                            "src": "1701:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1701:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1674:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61726b6574706c6163652e73656c6c696e674e46543a2053656e6465722068617320746f20626520746865206f776e6572206f6620746f6b656e",
                        "id": 2825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1715:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9",
                          "typeString": "literal_string \"Marketplace.sellingNFT: Sender has to be the owner of token\""
                        },
                        "value": "Marketplace.sellingNFT: Sender has to be the owner of token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_405d4e5f6425ebbba4d95178f2bd7d29befdbc49eb4db43262637ab677ad4be9",
                          "typeString": "literal_string \"Marketplace.sellingNFT: Sender has to be the owner of token\""
                        }
                      ],
                      "id": 2817,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1666:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1666:111:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2827,
                  "nodeType": "ExpressionStatement",
                  "src": "1666:111:3"
                },
                {
                  "expression": {
                    "id": 2836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2828,
                        "name": "sellNftList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2760,
                        "src": "1787:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
                          "typeString": "mapping(uint256 => struct OwnershipModule.SellNft storage ref)"
                        }
                      },
                      "id": 2830,
                      "indexExpression": {
                        "id": 2829,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2804,
                        "src": "1799:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1787:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SellNft_$2755_storage",
                        "typeString": "struct OwnershipModule.SellNft storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2832,
                          "name": "price_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2806,
                          "src": "1837:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2833,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3059,
                            "src": "1865:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1865:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2831,
                        "name": "SellNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2755,
                        "src": "1808:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SellNft_$2755_storage_ptr_$",
                          "typeString": "type(struct OwnershipModule.SellNft storage pointer)"
                        }
                      },
                      "id": 2835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "price",
                        "seller"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1808:80:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SellNft_$2755_memory_ptr",
                        "typeString": "struct OwnershipModule.SellNft memory"
                      }
                    },
                    "src": "1787:101:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SellNft_$2755_storage",
                      "typeString": "struct OwnershipModule.SellNft storage ref"
                    }
                  },
                  "id": 2837,
                  "nodeType": "ExpressionStatement",
                  "src": "1787:101:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2839,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2804,
                        "src": "1915:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2840,
                        "name": "price_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2806,
                        "src": "1922:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2841,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3059,
                          "src": "1930:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1930:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2838,
                      "name": "SellingNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2768,
                      "src": "1904:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 2843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1904:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2844,
                  "nodeType": "EmitStatement",
                  "src": "1899:44:3"
                }
              ]
            },
            "functionSelector": "726bddfd",
            "id": 2846,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selling",
            "nameLocation": "1521:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2804,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1537:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "1529:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2806,
                  "mutability": "mutable",
                  "name": "price_",
                  "nameLocation": "1552:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "1544:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:31:3"
            },
            "returnParameters": {
              "id": 2808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1567:0:3"
            },
            "scope": 2963,
            "src": "1512:438:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2947,
              "nodeType": "Block",
              "src": "1993:810:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2854,
                            "name": "nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2848,
                            "src": "2027:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2852,
                            "name": "AvaraNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2747,
                            "src": "2011:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                              "typeString": "contract IAvaraNft"
                            }
                          },
                          "id": 2853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2735,
                          "src": "2011:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 2855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2011:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572736869704d6f64756c652e627579696e673a204e6674496420646f6573206e6f742065786973742e",
                        "id": 2856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2035:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6",
                          "typeString": "literal_string \"OwnershipModule.buying: NftId does not exist.\""
                        },
                        "value": "OwnershipModule.buying: NftId does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c95a4093b9b5982db3045e3bcd00d5a08a183a1ed89c3739e0ee351247570aa6",
                          "typeString": "literal_string \"OwnershipModule.buying: NftId does not exist.\""
                        }
                      ],
                      "id": 2851,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2003:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2003:80:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2858,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:80:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2860,
                              "name": "sellNftList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2760,
                              "src": "2101:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
                                "typeString": "mapping(uint256 => struct OwnershipModule.SellNft storage ref)"
                              }
                            },
                            "id": 2862,
                            "indexExpression": {
                              "id": 2861,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2848,
                              "src": "2113:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2101:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SellNft_$2755_storage",
                              "typeString": "struct OwnershipModule.SellNft storage ref"
                            }
                          },
                          "id": 2863,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2752,
                          "src": "2101:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2129:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2101:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572736869704d6f64756c652e627579696e673a20546f6b656e206973206e6f7420696e2073616c65206c6973742e",
                        "id": 2866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2132:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50",
                          "typeString": "literal_string \"OwnershipModule.buying: Token is not in sale list.\""
                        },
                        "value": "OwnershipModule.buying: Token is not in sale list."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76b58f57b4f45142d78e3f0b05084f67193e35797977c3f49aceb9b4c7c1ae50",
                          "typeString": "literal_string \"OwnershipModule.buying: Token is not in sale list.\""
                        }
                      ],
                      "id": 2859,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2093:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2093:92:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2868,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:92:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2872,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2848,
                              "src": "2220:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2870,
                              "name": "AvaraNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2747,
                              "src": "2203:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                                "typeString": "contract IAvaraNft"
                              }
                            },
                            "id": 2871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5266,
                            "src": "2203:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 2873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2203:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2874,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3059,
                            "src": "2230:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2230:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2203:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572736869704d6f64756c652e627579696e673a204f776e6572206f66206e66742063616e206e6f742062757920686973206f776e206e66742e",
                        "id": 2877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2244:63:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101",
                          "typeString": "literal_string \"OwnershipModule.buying: Owner of nft can not buy his own nft.\""
                        },
                        "value": "OwnershipModule.buying: Owner of nft can not buy his own nft."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04344e2f092c7df47625757118c85a6ff0bb5c116132671688f81e4894a4b101",
                          "typeString": "literal_string \"OwnershipModule.buying: Owner of nft can not buy his own nft.\""
                        }
                      ],
                      "id": 2869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2195:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:113:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2879,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:113:3"
                },
                {
                  "assignments": [
                    2882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2882,
                      "mutability": "mutable",
                      "name": "sell",
                      "nameLocation": "2334:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2947,
                      "src": "2318:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SellNft_$2755_storage_ptr",
                        "typeString": "struct OwnershipModule.SellNft"
                      },
                      "typeName": {
                        "id": 2881,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2880,
                          "name": "SellNft",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2755,
                          "src": "2318:7:3"
                        },
                        "referencedDeclaration": 2755,
                        "src": "2318:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellNft_$2755_storage_ptr",
                          "typeString": "struct OwnershipModule.SellNft"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2886,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2883,
                      "name": "sellNftList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2760,
                      "src": "2341:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
                        "typeString": "mapping(uint256 => struct OwnershipModule.SellNft storage ref)"
                      }
                    },
                    "id": 2885,
                    "indexExpression": {
                      "id": 2884,
                      "name": "nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2848,
                      "src": "2353:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2341:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SellNft_$2755_storage",
                      "typeString": "struct OwnershipModule.SellNft storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2318:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2890,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3059,
                                "src": "2393:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2393:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2894,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2415:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OwnershipModule_$2963",
                                    "typeString": "contract OwnershipModule"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OwnershipModule_$2963",
                                    "typeString": "contract OwnershipModule"
                                  }
                                ],
                                "id": 2893,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2407:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2892,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2407:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2407:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2888,
                              "name": "Avara",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2750,
                              "src": "2377:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4386",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4345,
                            "src": "2377:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2377:44:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 2897,
                            "name": "sell",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2882,
                            "src": "2426:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SellNft_$2755_storage_ptr",
                              "typeString": "struct OwnershipModule.SellNft storage pointer"
                            }
                          },
                          "id": 2898,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2752,
                          "src": "2426:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2377:59:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572736869704d6f64756c652e627579696e673a20455243323020746f6b656e20616c6c6f77616e6365206973206c657373207468616e2073656c6c696e672070726963652e",
                        "id": 2900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2438:75:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67",
                          "typeString": "literal_string \"OwnershipModule.buying: ERC20 token allowance is less than selling price.\""
                        },
                        "value": "OwnershipModule.buying: ERC20 token allowance is less than selling price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e87c59eb673a36f80dccb31a0eef79952100caa69229eed1fbbd69f95ed0b67",
                          "typeString": "literal_string \"OwnershipModule.buying: ERC20 token allowance is less than selling price.\""
                        }
                      ],
                      "id": 2887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2369:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2369:145:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2902,
                  "nodeType": "ExpressionStatement",
                  "src": "2369:145:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2906,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3059,
                          "src": "2543:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2543:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2908,
                          "name": "sell",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2882,
                          "src": "2557:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SellNft_$2755_storage_ptr",
                            "typeString": "struct OwnershipModule.SellNft storage pointer"
                          }
                        },
                        "id": 2909,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2754,
                        "src": "2557:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2910,
                          "name": "sell",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2882,
                          "src": "2570:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SellNft_$2755_storage_ptr",
                            "typeString": "struct OwnershipModule.SellNft storage pointer"
                          }
                        },
                        "id": 2911,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2752,
                        "src": "2570:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2903,
                        "name": "Avara",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2750,
                        "src": "2524:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4386",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4367,
                      "src": "2524:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2524:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2913,
                  "nodeType": "ExpressionStatement",
                  "src": "2524:57:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2919,
                            "name": "nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2848,
                            "src": "2635:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2917,
                            "name": "AvaraNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2747,
                            "src": "2618:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                              "typeString": "contract IAvaraNft"
                            }
                          },
                          "id": 2918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5266,
                          "src": "2618:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 2920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2618:23:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2921,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3059,
                          "src": "2643:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2643:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2923,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2848,
                        "src": "2657:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2914,
                        "name": "AvaraNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2747,
                        "src": "2592:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAvaraNft_$2736",
                          "typeString": "contract IAvaraNft"
                        }
                      },
                      "id": 2916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5276,
                      "src": "2592:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2592:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2925,
                  "nodeType": "ExpressionStatement",
                  "src": "2592:71:3"
                },
                {
                  "expression": {
                    "id": 2931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2926,
                          "name": "sellNftList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2760,
                          "src": "2673:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
                            "typeString": "mapping(uint256 => struct OwnershipModule.SellNft storage ref)"
                          }
                        },
                        "id": 2928,
                        "indexExpression": {
                          "id": 2927,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2848,
                          "src": "2685:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2673:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellNft_$2755_storage",
                          "typeString": "struct OwnershipModule.SellNft storage ref"
                        }
                      },
                      "id": 2929,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2752,
                      "src": "2673:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2700:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2673:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2932,
                  "nodeType": "ExpressionStatement",
                  "src": "2673:28:3"
                },
                {
                  "expression": {
                    "id": 2939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2933,
                          "name": "sellNftList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2760,
                          "src": "2711:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SellNft_$2755_storage_$",
                            "typeString": "mapping(uint256 => struct OwnershipModule.SellNft storage ref)"
                          }
                        },
                        "id": 2935,
                        "indexExpression": {
                          "id": 2934,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2848,
                          "src": "2723:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2711:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellNft_$2755_storage",
                          "typeString": "struct OwnershipModule.SellNft storage ref"
                        }
                      },
                      "id": 2936,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2754,
                      "src": "2711:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2937,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3059,
                        "src": "2739:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2739:12:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2711:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2940,
                  "nodeType": "ExpressionStatement",
                  "src": "2711:40:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2942,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2848,
                        "src": "2776:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2943,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3059,
                          "src": "2783:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2783:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2941,
                      "name": "BuyingNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2774,
                      "src": "2766:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 2945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2766:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2946,
                  "nodeType": "EmitStatement",
                  "src": "2761:35:3"
                }
              ]
            },
            "functionSelector": "c99bf814",
            "id": 2948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buying",
            "nameLocation": "1964:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2848,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1979:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2948,
                  "src": "1971:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1970:15:3"
            },
            "returnParameters": {
              "id": 2850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1993:0:3"
            },
            "scope": 2963,
            "src": "1955:848:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2961,
              "nodeType": "Block",
              "src": "3018:48:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2956,
                          "name": "getBaseContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3045,
                          "src": "3035:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_Avara_$2585_$",
                            "typeString": "function () view returns (contract Avara)"
                          }
                        },
                        "id": 2957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3035:17:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avara_$2585",
                          "typeString": "contract Avara"
                        }
                      },
                      "id": 2958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ping",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 609,
                      "src": "3035:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 2959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3035:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2955,
                  "id": 2960,
                  "nodeType": "Return",
                  "src": "3028:31:3"
                }
              ]
            },
            "documentation": {
              "id": 2949,
              "nodeType": "StructuredDocumentation",
              "src": "2808:141:3",
              "text": " @dev Occasionally called (only) by the server to make sure that the connection with the module and main contract is granted."
            },
            "functionSelector": "5c36b186",
            "id": 2962,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2952,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2951,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3131,
                  "src": "2984:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2984:9:3"
              }
            ],
            "name": "ping",
            "nameLocation": "2963:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2967:2:3"
            },
            "returnParameters": {
              "id": 2955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2954,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2962,
                  "src": "3003:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2953,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3003:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3002:15:3"
            },
            "scope": 2963,
            "src": "2954:112:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2964,
        "src": "940:2128:3",
        "usedErrors": []
      }
    ],
    "src": "758:2310:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2022-01-27T15:46:36.903Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "moduleName()": {
        "details": "Returns the module name."
      },
      "moduleVersion()": {
        "details": "Returns the module version."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ping()": {
        "details": "Occasionally called (only) by the server to make sure that the connection with the module and main contract is granted."
      },
      "previousOwner()": {
        "details": "Returns the address of the previous owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without an owner. It won't be possible to call `onlyOwner` functions anymore. Can only be called by the current owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}